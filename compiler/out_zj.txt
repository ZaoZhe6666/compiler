const int cona = 10
const char conb = 97 (ASCLL)
const char conc = 54 (ASCLL)
int _cha
char chb[6]
char chc
char chd

f:
Need Parametor #1-- x
Need Parametor #2-- y
const int z = 1
T1 = x
T2 = 1

T1 = T1>T2
if T1 is False jump to label 1

T1 = x
T2 = z
T1+= T2
The Return Value Saved in T1

label 1:
T1 = x
T2 = 1
T1+= T2
x = T1
T1 = x
Sending Parametor #1 : T1    to Function f
T1 = y
Sending Parametor #2 : T1    to Function f
Calling f()
T1 = x
T2 = y
T1+= T2
The Return Value Saved in T1
Did not return Success When you see this!

compare:
Need Parametor #1-- a
Need Parametor #2-- b
T1 = a
T2 = b

T1 = T1>T2
if T1 is False jump to label 2

T1 = 1
The Return Value Saved in T1

label 2:
T1 = a
T2 = b

T1 = T1<=T2
if T1 is False jump to label 3

T1 = -1
T1*= 1
The Return Value Saved in T1

label 3:
Did not return Success When you see this!

line:
Need Parametor #1-- n
Need Parametor #2-- m
int i
int j
char stpos[100]
char posst[100]
int p
int q
int move
int end
int po1
int po2
int st2
T1 = 1
i = T1
T1 = 1
j = T1

label 4:
T1 = i
T2 = i
stpos[T1] = T2
T1 = i
T2 = i
posst[T1] = T2
T1 = i
T2 = 1
T1+= T2
i = T1
T1 = i
T2 = n

T1 = T1<=T2
while T1 is True jump to label 4

T1 = 1
i = T1

label 5:
T1 = i
T2 = 1

T1 = T1==T2
if T1 is False jump to label 6

T1 = 3
p = T1
T1 = 2
q = T1

label 6:
T1 = i
T2 = 2

T1 = T1==T2
if T1 is False jump to label 7

T1 = 8
p = T1
T1 = -1
T1*= 3
q = T1

label 7:
T1 = i
T2 = 3

T1 = T1==T2
if T1 is False jump to label 8

T1 = 3
p = T1
T1 = -1
T1*= 2
q = T1

label 8:
T1 = q
T2 = 0

T1 = T1!=T2
if T1 is False jump to label 9

T2 = q
Sending Parametor #1 : T2    to Function compare
T2 = 0
Sending Parametor #2 : T2    to Function compare
Calling compare()
T1 = Return_compare()
move = T1
T1 = move
T1*= q
end = T1
T2 = p
T1 = 1
T1 *= stpos[T2]
po1 = T1

label 10:
T2 = po1
T3 = move
T2+= T3
T1 = 1
T1 *= posst[T2]
st2 = T1
T2 = st2
T1 = 1
T1 *= stpos[T2]
po2 = T1
T1 = po1
T2 = st2
posst[T1] = T2
T1 = st2
T2 = po1
stpos[T1] = T2
T1 = po2
po1 = T1
T1 = j
T2 = 1
T1+= T2
j = T1
T1 = j
T2 = end

T1 = T1<=T2
while T1 is True jump to label 10

T1 = po2
T2 = p
posst[T1] = T2
T1 = p
T3 = p
T2 = 1
T2 *= stpos[T3]
T3 = q
T2+= T3
stpos[T1] = T2

label 9:
T1 = i
T2 = 1
T1+= T2
i = T1
T1 = i
T2 = m

T1 = T1<=T2
while T1 is True jump to label 5

T2 = 1
T1 = 1
T1 *= posst[T2]
Print Num T1
T1 = 2
i = T1

label 11:
T2 = i
T1 = 1
T1 *= posst[T2]
Print Num T1
T1 = i
T2 = 1
T1+= T2
i = T1
T1 = i
T2 = n

T1 = T1<=T2
while T1 is True jump to label 11

nothing to return
void return

f2:
Need Parametor #1-- x
int z2
T1 = 1
z2 = T1
T1 = x
T2 = z2
T1+= T2
x = T1
T1 = x
The Return Value Saved in T1
Did not return Success When you see this!

fib:
Need Parametor #1-- n
int result
T1 = n
T2 = 0

T1 = T1==T2
if T1 is False jump to label 12

T1 = 0
The Return Value Saved in T1

label 12:
T1 = n
T2 = 1

T1 = T1==T2
if T1 is False jump to label 13

T1 = 1
The Return Value Saved in T1

label 13:
T2 = n
T3 = 1
T2-= T3
Sending Parametor #1 : T2    to Function fib
Calling fib()
T1 = Return_fib()
T3 = n
T4 = 2
T3-= T4
Sending Parametor #1 : T3    to Function fib
Calling fib()
T2 = Return_fib()
T1+= T2
result = T1
T1 = result
The Return Value Saved in T1
Did not return Success When you see this!

nest:
int a[15]
int b[15]
T1 = 0
T2 = 1
a[T1] = T2
T1 = 1
T2 = 3
b[T1] = T2
T1 = 3
T2 = 4
a[T1] = T2
T1 = 4
T2 = 6
b[T1] = T2
T1 = 6
T2 = 8
a[T1] = T2
T6 = 0
T5 = 1
T5 *= a[T6]
T4 = 1
T4 *= b[T5]
T3 = 1
T3 *= a[T4]
T2 = 1
T2 *= b[T3]
T1 = 1
T1 *= a[T2]
T2 = 2333
b[T1] = T2
T2 = 0
T1 = 1
T1 *= a[T2]
T3 = 8
T2 = 1
T2 *= b[T3]
T1+= T2
Print Num T1
nothing to return
void return

t:
Need Parametor #1-- x
T1 = x
T2 = 99

T1 = T1>T2
if T1 is False jump to label 14

nothing to return

label 14:
T1 = x
T2 = 1
T1+= T2
x = T1
T1 = x
Print Char T1(ASCLL)
T1 = x
Sending Parametor #1 : T1    to Function t
Calling t()
nothing to return
void return

main:
const int coz = 3
int a
int b
int c
int d
int key
int i
char sz2[5]
int cho
char sz[5]
char e
T1 = 43
chc = T1
T1 = 45
chd = T1
T1 = 3
b = T1
T1 = 0
i = T1
T1 = -1
T1*= 2
c = T1
T1 = 1
key = T1
cho = Readin(int)
T1 = cho
if T1 != 0  jump to label 15
Print String test line:
T1 = 8
Sending Parametor #1 : T1    to Function line
T1 = 3
Sending Parametor #2 : T1    to Function line
Calling line()

label 15:
if T1 != 1  jump to label 16
Print String test fib:
T2 = coz
Sending Parametor #1 : T2    to Function fib
Calling fib()
T1 = Return_fib()
d = T1
T1 = d
Print String fib=Print Num T1

label 16:
if T1 != 2  jump to label 17

label 18:
T1 = i
T2 = 97
sz[T1] = T2
T1 = i
T2 = i
sz2[T1] = T2
T1 = i
T2 = 1
T1+= T2
i = T1
T1 = i
T2 = 5

T1 = T1<T2
while T1 is True jump to label 18

key = Readin(int)
a = Readin(int)
T1 = key
T2 = 3

T1 = T1<T2
if T1 is False jump to label 19

T1 = a
T2 = b
T1+= T2
a = T1
T1 = a
Print Num T1

label 19:
T1 = key
T2 = 3

T1 = T1<=T2
if T1 is False jump to label 20

T1 = b
T2 = a
T1-= T2
b = T1
T1 = 0
T3 = 0
T2 = 1
T2 *= sz2[T3]
T3 = b
T2+= T3
sz2[T1] = T2
T1 = 0
T3 = 0
T2 = 1
T2 *= sz[T3]
T3 = 1
T2+= T3
sz[T1] = T2
T1 = b
Print Num T1
T2 = 0
T1 = 1
T1 *= sz[T2]
Print Char T1(ASCLL)
T2 = 0
T1 = 1
T1 *= sz2[T2]
Print Num T1

label 20:
T1 = key
T2 = 6

T1 = T1>T2
if T1 is False jump to label 21

T1 = a
T1*= b
c = T1
T1 = 1
T3 = 1
T2 = 1
T2 *= sz2[T3]
T3 = c
T2+= T3
sz2[T1] = T2
T1 = 1
T3 = 1
T2 = 1
T2 *= sz[T3]
T3 = 1
T2+= T3
sz[T1] = T2
T1 = c
Print Num T1
T2 = 1
T1 = 1
T1 *= sz[T2]
Print Char T1(ASCLL)
T2 = 1
T1 = 1
T1 *= sz2[T2]
Print Num T1

label 21:
T1 = key
T2 = 6

T1 = T1>=T2
if T1 is False jump to label 22

T1 = a
T1/= b
d = T1
T1 = 2
T3 = 2
T2 = 1
T2 *= sz2[T3]
T3 = d
T2+= T3
sz2[T1] = T2
T1 = 2
T3 = 2
T2 = 1
T2 *= sz[T3]
T3 = 1
T2+= T3
sz[T1] = T2
T1 = d
Print Num T1
T2 = 2
T1 = 1
T1 *= sz[T2]
Print Char T1(ASCLL)
T2 = 2
T1 = 1
T1 *= sz2[T2]
Print Num T1

label 22:
T1 = key
T2 = 4

T1 = T1!=T2
if T1 is False jump to label 23

T1 = a
T2 = 1
T2/= coz
T1-= T2
a = T1
T1 = 3
T3 = 3
T2 = 1
T2 *= sz2[T3]
T3 = a
T2+= T3
T3 = 99
T2+= T3
sz2[T1] = T2
T1 = 3
T3 = 3
T2 = 1
T2 *= sz[T3]
T3 = 1
T2+= T3
sz[T1] = T2
T1 = a
Print Num T1
T2 = 3
T1 = 1
T1 *= sz[T2]
Print Char T1(ASCLL)
T2 = 3
T1 = 1
T1 *= sz2[T2]
Print Num T1

label 23:
T1 = key
T2 = 4

T1 = T1==T2
if T1 is False jump to label 24

T1 = -1
T1*= a
T2 = 2
T2*= coz
T1+= T2
a = T1
T1 = 4
T3 = 4
T2 = 1
T2 *= sz[T3]
T3 = 1
T2+= T3
sz[T1] = T2
T1 = a
Print Num T1
T2 = 4
T1 = 1
T1 *= sz[T2]
Print Char T1(ASCLL)
T2 = 4
T1 = 1
T1 *= sz2[T2]
Print Num T1

label 24:
T1 = key
if T1 is False jump to label 25

T1 = a
Print Num T1

label 25:

label 17:
if T1 != 3  jump to label 26
Print String test function:
T1 = key
if T1 is False jump to label 27

T1 = 4
T3 = -1
T3*= 2
Sending Parametor #1 : T3    to Function f
T3 = 3
Sending Parametor #2 : T3    to Function f
Calling f()
T2 = Return_f()
T4 = 5
T5 = 1
T4+= T5
T3 = T4
T3*= coz
T2+= T3
sz2[T1] = T2

label 27:
T1 = conb
Sending Parametor #1 : T1    to Function t
Calling t()
T2 = 97
Sending Parametor #1 : T2    to Function f2
Calling f2()
T1 = Return_f2()
Print Char T1(ASCLL)
T2 = 4
T1 = 1
T1 *= sz2[T2]
Print Num T1

label 26:
if T1 != 4  jump to label 28
Print String test switch:
key = Readin(int)
T1 = key
T1*= 1
if T1 != 0  jump to label 29
Print String key is 0

label 29:
if T1 != 1  jump to label 30
T1 = key
Print String key is Print Num T1

label 30:
if T1 != 2  jump to label 31
Print String key is 2

label 31:
e = Readin(char)
T1 = e
if T1 != 97  jump to label 32
T1 = 2
Print Num T1

label 32:
if T1 != 98  jump to label 33
T1 = 2
T2 = 2
T1-= T2
Print Num T1

label 33:

label 28:
Calling nest()
nothing to return
Program Finished

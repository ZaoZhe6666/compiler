const int cst1 = 1
const int cst2 = 2
const int cst3 = 3
const char csta = 97 (ASCLL)
const char cstb = 98 (ASCLL)
const char cstc = 99 (ASCLL)
int g_a
int g_b
char g_arr[2048]
char g_stra[1024]
char g_strb[2048]

const_define:
const int a = 1
const int b = 0
const int c = -1
const char cst23 = 120 (ASCLL)
const char cst24 = 122 (ASCLL)
const char consta0 = 65 (ASCLL)
const char csta1 = 49 (ASCLL)
const char cst_div = 47 (ASCLL)
Print String  const_define 
Print String            a:
T1 = 0
T2 = 1
T2*= a
T1+= T2
Print Num T1
Print String        cst_div:
T1 = 0
T2 = 1
T2*= cst_div
T1+= T2
Print Char T1(ASCLL)
Print String        
void return

const_define_test:
Print String  const_define_test 
Calling const_define()
void return

var_define:
int a
char arr[1]
int _a
char _arr[2]
int a1
char arr1[3]
char b
char strb[1]
char _b
char _bstr[2]
char _b1
char _bstr1[3]
int c
char z
Print String  var_define 
void return

var_define_test:
Print String  var_define_test 
Calling var_define()
void return

define:
const int int1 = 1
const char cst24 = 122 (ASCLL)
const char consta0 = 65 (ASCLL)
int val1
char b
char strb[1]
Print String  define 
void return

define_test:
Print String  define_test 
Calling var_define_test()
Calling const_define_test()
Calling define()
Print String define test passed
void return

operator:
int a
int b
int c
int d
int e
int f
Print String  operator 
T1 = 0
T2 = 1
T2*= 1
T1+= T2
a = T1
T1 = 0
T2 = 1
T2*= 1
T1+= T2
T2 = 1
T2*= 2
T1+= T2
b = T1
T1 = 0
T2 = 1
T2*= 3
T2*= 1
T1+= T2
c = T1
T1 = 0
T2 = 1
T2*= 4
T1-= T2
d = T1
T1 = 0
T2 = 1
T2*= 5
T1+= T2
e = T1
T1 = 0
T2 = 1
T2*= 6
T1+= T2
f = T1
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= b
T4*= 3
T3+= T4
T2*= T3
T1+= T2
T2 = 1
T2*= c
T1+= T2
T2 = 1
T2*= d
T2/= 4
T1-= T2
T2 = 1
T2*= a
T2/= a
T1+= T2
a = T1
T1 = 0
T2 = 1
T2*= 0
T1+= T2
T2 = 1
T2*= a
T1+= T2
T2 = 1
T3 = 0
T4 = 1
T4*= a
T4*= 3
T3+= T4
T2*= T3
T1+= T2
T2 = 1
T2*= c
T1+= T2
T2 = 1
T2*= d
T2/= 4
T1-= T2
T2 = 1
T2*= e
T2*= f
T1+= T2
b = T1
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= a
T3+= T4
T2*= T3
T1-= T2
T2 = 1
T2*= b
T2*= 0
T1+= T2
T2 = 1
T3 = 0
T4 = 1
T4*= 1
T3+= T4
T4 = 1
T4*= 0
T3-= T4
T2*= T3
T1-= T2
e = T1
void return

operator_test:
Print String  operator_test 
Calling operator()
Print String operator test passed
void return

string:
Print String  string 
Print String ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz
Print String !#$%&'()*+,-./:;<=>?@[]^_`{|}~
void return

string_test:
Print String  string_test 
Calling string()
void return

dowhile:
int i
Print String  dowhile 
T1 = 0
T2 = 1
T2*= 100
T1+= T2
i = T1

label 0:
T1 = 0
T2 = 1
T2*= i
T1+= T2
T2 = 0
T3 = 1
T3*= 50
T2+= T3
T1 = T1>=T2
if T1 is False jump to label 1
T1 = 0
T2 = 1
T2*= i
T2/= 2
T1+= T2
i = T1

label 1:
T1 = 0
T2 = 1
T2*= i
T1+= T2
T2 = 0
T3 = 1
T3*= 50
T2+= T3
T1 = T1<T2
if T1 is False jump to label 2
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= i
T3+= T4
T4 = 1
T4*= 10
T3+= T4
T2*= T3
T2/= 10
T1+= T2
i = T1

label 2:
T1 = 0
T2 = 1
T2*= i
T1+= T2
T2 = 0
T3 = 1
T3*= 10
T2+= T3
T1 = T1>=T2
if T1 is False jump to label 0

label 3:
T1 = 0
T2 = 1
T2*= i
T1+= T2
T2 = 1
T2*= 1
T1-= T2
i = T1
Print String dowhile test passed
T1 = 0
T2 = 1
T2*= 0
T1+= T2
while T1 is True jump to label 3
void return

dowhile_test:
Print String  dowhile_test 
Calling dowhile()
void return

ifcondition:
int a
int rightnumber
Print String  ifcondition 
T1 = 0
T2 = 1
T2*= 1
T1+= T2
a = T1
T1 = 0
T2 = 1
T2*= 0
T1+= T2
rightnumber = T1
T1 = 0
T2 = 1
T2*= a
T1+= T2
T2 = 0
T3 = 1
T3*= 1
T2+= T3
T1 = T1==T2
if T1 is False jump to label 4
T1 = 0
T2 = 1
T2*= rightnumber
T1+= T2
T2 = 1
T2*= 1
T1+= T2
rightnumber = T1

label 4:
T1 = 0
T2 = 1
T2*= 2
T1+= T2
a = T1
T1 = 0
T2 = 1
T2*= a
T1+= T2
T2 = 0
T3 = 1
T3*= 1
T2+= T3
T1 = T1>T2
if T1 is False jump to label 5
T1 = 0
T2 = 1
T2*= rightnumber
T1+= T2
T2 = 1
T2*= 1
T1+= T2
rightnumber = T1

label 5:
T1 = 0
T2 = 1
T2*= 0
T1+= T2
a = T1
T1 = 0
T2 = 1
T2*= a
T1+= T2
T2 = 0
T3 = 1
T3*= 1
T2+= T3
T1 = T1<T2
if T1 is False jump to label 6
T1 = 0
T2 = 1
T2*= rightnumber
T1+= T2
T2 = 1
T2*= 1
T1+= T2
rightnumber = T1

label 6:
T1 = 0
T2 = 1
T2*= a
T1+= T2
T2 = 0
T3 = 1
T3*= 1
T2+= T3
T1 = T1!=T2
if T1 is False jump to label 7
T1 = 0
T2 = 1
T2*= rightnumber
T1+= T2
T2 = 1
T2*= 1
T1+= T2
rightnumber = T1

label 7:
T1 = 0
T2 = 1
T2*= a
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1>=T2
if T1 is False jump to label 8
T1 = 0
T2 = 1
T2*= rightnumber
T1+= T2
T2 = 1
T2*= 1
T1+= T2
rightnumber = T1

label 8:
T1 = 0
T2 = 1
T2*= a
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1<=T2
if T1 is False jump to label 9
T1 = 0
T2 = 1
T2*= rightnumber
T1+= T2
T2 = 1
T2*= 1
T1+= T2
rightnumber = T1

label 9:
T1 = 0
T2 = 1
T2*= rightnumber
T1+= T2
T2 = 0
T3 = 1
T4 = 0
T5 = 1
T5*= 1
T4+= T5
T5 = 1
T5*= 1
T4+= T5
T5 = 1
T5*= 1
T4+= T5
T5 = 1
T5*= 1
T5*= 3
T4+= T5
T3*= T4
T2+= T3
T1 = T1!=T2
if T1 is False jump to label 10
Print String ifcondition clause error!

label 10:
T1 = 0
T2 = 1
T2*= rightnumber
T1+= T2
T2 = 0
T3 = 1
T3*= rightnumber
T2+= T3
T1 = T1!=T2
if T1 is False jump to label 11
Print String ifcondition clause error

label 11:
void return

switchcodintionans:
Need Parametor #1-- x
Print String  switch(int x) 
T1 = 0
T2 = 1
T2*= x
T1+= T2
if T1 != 1  jump to label 12
T1 = 0
T2 = 1
T2*= 2
T1+= T2
The Return Value Saved in T1

label 12:
if T1 != 2  jump to label 13
T1 = 0
T2 = 1
T2*= 3
T1+= T2
The Return Value Saved in T1

label 13:
if T1 != 3  jump to label 14
T1 = 0
T2 = 1
T2*= 4
T1+= T2
The Return Value Saved in T1

label 14:
T1 = 0
T2 = 1
T2*= 5
T1+= T2
The Return Value Saved in T1
Did not return Success When you see this!

switchcodintion:
int i
int rightnumber
Print String  switch 
T1 = 0
T2 = 1
T2*= 1
T1+= T2
i = T1
T1 = 0
T2 = 1
T2*= 0
T1+= T2
rightnumber = T1

label 15:
T1 = 0
T2 = 1
T2*= i
T1+= T2
T2 = 1
T2*= 1
T1+= T2
T2 = 0
T3 = 1
T4 = 0
T5 = 1
T5*= i
T4+= T5
Sending Parametor #1 : T4    to Function switchcodintionans
Calling switchcodintionans()
T3 *= Return_switchcodintionans()
T2+= T3
T1 = T1==T2
if T1 is False jump to label 16
T1 = 0
T2 = 1
T2*= rightnumber
T1+= T2
T2 = 1
T2*= 1
T1+= T2
rightnumber = T1

label 16:
T1 = 0
T2 = 1
T2*= i
T1+= T2
T2 = 1
T2*= 1
T1+= T2
i = T1
T1 = 0
T2 = 1
T2*= i
T1+= T2
T2 = 0
T3 = 1
T3*= 5
T2+= T3
T1 = T1<T2
while T1 is True jump to label 15
T1 = 0
T2 = 1
T2*= rightnumber
T1+= T2
T2 = 0
T3 = 1
T3*= 4
T2+= T3
T1 = T1!=T2
if T1 is False jump to label 17
Print String switchcodintion clause  error!

label 17:
T1 = 0
T2 = 1
T2*= rightnumber
T1+= T2
if T1 is False jump to label 18
T1 = 0
T2 = 1
T2*= i
T1+= T2
The Return Value Saved in T1

label 18:
Print String switchcodintion clause  error!
Did not return Success When you see this!

condition:
const int intermax = 5
int iter
T1 = 0
T2 = 1
T2*= 0
T1+= T2
iter = T1
Print String  condition 

label 19:
T1 = 0
T2 = 1
T2*= iter
T1+= T2
if T1 != 0  jump to label 20
T1 = 0
T2 = 1
T2*= iter
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1!=T2
if T1 is False jump to label 21
Print String error 0

label 21:

label 20:
if T1 != 1  jump to label 22
T1 = 0
T2 = 1
T2*= iter
T1+= T2
T2 = 0
T3 = 1
T3*= 1
T2+= T3
T1 = T1!=T2
if T1 is False jump to label 23
Print String error 1

label 23:

label 22:
if T1 != 2  jump to label 24
T1 = 0
T2 = 1
T2*= iter
T1+= T2
T2 = 0
T3 = 1
T3*= 2
T2+= T3
T1 = T1!=T2
if T1 is False jump to label 25
Print String error 2

label 25:

label 24:
T1 = 0
T2 = 1
T2*= iter
T1+= T2
T2 = 1
T2*= 1
T1+= T2
iter = T1
T1 = 0
T2 = 1
T2*= iter
T1+= T2
T2 = 0
T3 = 1
T3*= intermax
T2+= T3
T1 = T1<T2
while T1 is True jump to label 19
void return

condition_test:
Print String  condition_test 
Calling ifcondition()
Calling switchcodintion()
Calling condition()
Print String condition test passed
void return

miscellaneous:
int _
int a
char array[23]
int i
int endid
char ch1
char buf[256]
T1 = 0
T2 = 1
T2*= 1
T1+= T2
_ = T1
T1 = 0
T2 = 1
T2*= 2
T1+= T2
a = T1
T1 = 0
T2 = 1
T2*= 0
T1+= T2
i = T1
Print String  miscella 

label 26:
T1 = 0
T2 = 1
T2*= i
T1+= T2
T2 = 0
T2+= T1
T3 = 0
T4 = 1
T4*= i
T3+= T4
array[T2] = T3
T1 = 0
T2 = 1
T2*= i
T1+= T2
T2 = 1
T2*= 1
T1+= T2
i = T1
T1 = 0
T2 = 1
T2*= i
T1+= T2
T2 = 0
T3 = 1
T3*= 23
T2+= T3
T1 = T1<T2
while T1 is True jump to label 26
T1 = 0
T2 = 1
T2*= 97
T1+= T2
ch1 = T1
T1 = 0
T2 = 1
T2*= 127
T1+= T2
i = T1
T1 = 0
T2 = 1
T2*= i
T1+= T2
endid = T1
T1 = 0
T2 = 1
T2*= 0
T1+= T2
_ = T1

label 27:
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= _
T4*= 1
T3+= T4
T4 = 1
T4*= _
T3-= T4
T4 = 1
T4*= 1
T3-= T4
T4 = 1
T4*= 2
T4/= 1
T3+= T4
T4 = 1
T4*= 1
T3-= T4
T2*= T3
T2/= 2
T1+= T2
T2 = 0
T2+= T1
T3 = 0
T4 = 1
T4*= 97
T3+= T4
buf[T2] = T3
T1 = 0
T2 = 1
T2*= _
T1+= T2
T2 = 1
T2*= 1
T1+= T2
_ = T1
T1 = 0
T2 = 1
T2*= _
T1+= T2
T2 = 0
T3 = 1
T3*= endid
T2+= T3
T1 = T1<T2
while T1 is True jump to label 27
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= 0
T3+= T4
T2 *= buf[T3]
T1+= T2
T2 = 0
T3 = 1
T3*= 97
T2+= T3
T1 = T1==T2
if T1 is False jump to label 28
Print String miscellaneous test passed

label 28:
void return

miscellaneous_test:
Print String  miscella_test 
Calling miscellaneous()
void return

fibonaci:
Need Parametor #1-- n
Print String  fibonaci 
T1 = 0
T2 = 1
T2*= n
T1+= T2
if T1 != 0  jump to label 29
T1 = 0
T2 = 1
T2*= 0
T1+= T2
The Return Value Saved in T1

label 29:
if T1 != 1  jump to label 30
T1 = 0
T2 = 1
T2*= 1
T1+= T2
The Return Value Saved in T1

label 30:
if T1 != 2  jump to label 31
T1 = 0
T2 = 1
T2*= 1
T1+= T2
The Return Value Saved in T1

label 31:
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= n
T3+= T4
T4 = 1
T4*= 1
T3-= T4
Sending Parametor #1 : T3    to Function fibonaci
Calling fibonaci()
T2 *= Return_fibonaci()
T1+= T2
T2 = 1
T3 = 0
T4 = 1
T4*= n
T3+= T4
T4 = 1
T4*= 2
T3-= T4
Sending Parametor #1 : T3    to Function fibonaci
Calling fibonaci()
T2 *= Return_fibonaci()
T1+= T2
The Return Value Saved in T1
Did not return Success When you see this!

fibonaci_test:
int n
Print String  fibonaci_test 
Print String Fibonaci: Please input a unsigned positive integer ?
n = Readin(int)

label 32:
T1 = 0
T2 = 1
T2*= n
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1<T2
if T1 is False jump to label 33
Print String Input error, try again:
n = Readin(int)

label 33:
T1 = 0
T2 = 1
T2*= n
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1>=T2
if T1 is False jump to label 34
Print String The fibonaci's answer is T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= n
T3+= T4
Sending Parametor #1 : T3    to Function fibonaci
Calling fibonaci()
T2 *= Return_fibonaci()
T1+= T2
Print Num T1

label 34:
T1 = 0
T2 = 1
T2*= n
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1<T2
while T1 is True jump to label 32
void return

mod:
Need Parametor #1-- n
Need Parametor #2-- m
Print String  mod 
T1 = 0
T2 = 1
T2*= n
T1+= T2
T2 = 1
T2*= n
T2/= m
T2*= m
T1-= T2
The Return Value Saved in T1
Did not return Success When you see this!

gcd:
Need Parametor #1-- n
Need Parametor #2-- m
int rem
Print String  gcd 
T1 = 0
T2 = 1
T2*= 0
T1+= T2
rem = T1
T1 = 0
T2 = 1
T2*= n
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1==T2
if T1 is False jump to label 35
T1 = 0
T2 = 1
T2*= m
T1+= T2
The Return Value Saved in T1

label 35:
T1 = 0
T2 = 1
T2*= m
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1==T2
if T1 is False jump to label 36
T1 = 0
T2 = 1
T2*= n
T1+= T2
The Return Value Saved in T1

label 36:
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= m
T3+= T4
Sending Parametor #1 : T3    to Function gcd
T3 = 0
T4 = 1
T5 = 0
T6 = 1
T6*= n
T5+= T6
Sending Parametor #1 : T5    to Function mod
T5 = 0
T6 = 1
T6*= m
T5+= T6
Sending Parametor #2 : T5    to Function mod
Calling mod()
T4 *= Return_mod()
T3+= T4
Sending Parametor #2 : T3    to Function gcd
Calling gcd()
T2 *= Return_gcd()
T1+= T2
The Return Value Saved in T1
Did not return Success When you see this!

iswronggcd:
Need Parametor #1-- n
Need Parametor #2-- m
Print String  wronggcd 
T1 = 0
T2 = 1
T2*= n
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1<=T2
if T1 is False jump to label 37
T1 = 0
T2 = 1
T2*= 1
T1+= T2
The Return Value Saved in T1

label 37:
T1 = 0
T2 = 1
T2*= m
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1<=T2
if T1 is False jump to label 38
T1 = 0
T2 = 1
T2*= 1
T1+= T2
The Return Value Saved in T1

label 38:
T1 = 0
T2 = 1
T2*= 0
T1+= T2
The Return Value Saved in T1
Did not return Success When you see this!

gcd_test:
int n
int m
Print String  gcd_test 
Print String GCD: Please input two unsigned positive integer ?
n = Readin(int)
m = Readin(int)
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= n
T3+= T4
Sending Parametor #1 : T3    to Function iswronggcd
T3 = 0
T4 = 1
T4*= m
T3+= T4
Sending Parametor #2 : T3    to Function iswronggcd
Calling iswronggcd()
T2 *= Return_iswronggcd()
T1+= T2
if T1 is False jump to label 39

label 40:
Print String Input error, try Again: 
n = Readin(int)
m = Readin(int)
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= n
T3+= T4
Sending Parametor #1 : T3    to Function iswronggcd
T3 = 0
T4 = 1
T4*= m
T3+= T4
Sending Parametor #2 : T3    to Function iswronggcd
Calling iswronggcd()
T2 *= Return_iswronggcd()
T1+= T2
while T1 is True jump to label 40

label 39:
Print String The gcd's answer is T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= n
T3+= T4
Sending Parametor #1 : T3    to Function gcd
T3 = 0
T4 = 1
T4*= m
T3+= T4
Sending Parametor #2 : T3    to Function gcd
Calling gcd()
T2 *= Return_gcd()
T1+= T2
Print Num T1
void return

is_prime:
Need Parametor #1-- x
int i
T1 = 0
T2 = 1
T2*= 2
T1+= T2
i = T1
T1 = 0
T2 = 1
T2*= x
T1+= T2
T2 = 0
T3 = 1
T3*= 2
T2+= T3
T1 = T1==T2
if T1 is False jump to label 41
T1 = 0
T2 = 1
T2*= 1
T1+= T2
The Return Value Saved in T1

label 41:

label 42:
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= x
T3+= T4
Sending Parametor #1 : T3    to Function mod
T3 = 0
T4 = 1
T4*= i
T3+= T4
Sending Parametor #2 : T3    to Function mod
Calling mod()
T2 *= Return_mod()
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1==T2
if T1 is False jump to label 43
T1 = 0
T2 = 1
T2*= 0
T1+= T2
The Return Value Saved in T1

label 43:
T1 = 0
T2 = 1
T2*= i
T1+= T2
T2 = 1
T2*= 1
T1+= T2
i = T1
T1 = 0
T2 = 1
T2*= i
T2*= i
T1+= T2
T2 = 0
T3 = 1
T3*= x
T2+= T3
T1 = T1<T2
while T1 is True jump to label 42
T1 = 0
T2 = 1
T2*= 1
T1+= T2
The Return Value Saved in T1
Did not return Success When you see this!

prime_factorization:
Need Parametor #1-- n
int i
int first
T1 = 0
T2 = 1
T2*= 2
T1+= T2
i = T1
T1 = 0
T2 = 1
T2*= 0
T1+= T2
first = T1
T1 = 0
T2 = 1
T2*= n
T1+= T2
T2 = 0
T3 = 1
T3*= 1
T2+= T3
T1 = T1==T2
if T1 is False jump to label 44
Print String 1
nothing to return

label 44:

label 45:
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= i
T3+= T4
Sending Parametor #1 : T3    to Function is_prime
Calling is_prime()
T2 *= Return_is_prime()
T1+= T2
T2 = 0
T3 = 1
T3*= 1
T2+= T3
T1 = T1==T2
if T1 is False jump to label 46
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= n
T3+= T4
Sending Parametor #1 : T3    to Function mod
T3 = 0
T4 = 1
T4*= i
T3+= T4
Sending Parametor #2 : T3    to Function mod
Calling mod()
T2 *= Return_mod()
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1==T2
if T1 is False jump to label 47

label 48:
T1 = 0
T2 = 1
T2*= n
T2/= i
T1+= T2
n = T1
T1 = 0
T2 = 1
T2*= first
T1+= T2
T2 = 0
T3 = 1
T3*= 1
T2+= T3
T1 = T1==T2
if T1 is False jump to label 49
Print String *

label 49:
T1 = 0
T2 = 1
T2*= 1
T1+= T2
first = T1
T1 = 0
T2 = 1
T2*= i
T1+= T2
Print Num T1
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= n
T3+= T4
Sending Parametor #1 : T3    to Function mod
T3 = 0
T4 = 1
T4*= i
T3+= T4
Sending Parametor #2 : T3    to Function mod
Calling mod()
T2 *= Return_mod()
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1==T2
while T1 is True jump to label 48

label 47:

label 46:
T1 = 0
T2 = 1
T2*= i
T1+= T2
T2 = 1
T2*= 1
T1+= T2
i = T1
T1 = 0
T2 = 1
T2*= i
T2*= i
T1+= T2
T2 = 0
T3 = 1
T3*= n
T2+= T3
T1 = T1<T2
while T1 is True jump to label 45
T1 = 0
T2 = 1
T2*= n
T1+= T2
T2 = 0
T3 = 1
T3*= 1
T2+= T3
T1 = T1!=T2
if T1 is False jump to label 50
T1 = 0
T2 = 1
T2*= first
T1+= T2
T2 = 0
T3 = 1
T3*= 1
T2+= T3
T1 = T1==T2
if T1 is False jump to label 51
Print String *

label 51:
T1 = 0
T2 = 1
T2*= n
T1+= T2
Print Num T1

label 50:
void return

prime_factorization_test:
int n
Print String prime_factorization: Please input a unsigned positive integer(<2^31-1) ?
n = Readin(int)

label 52:
T1 = 0
T2 = 1
T2*= n
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1<T2
if T1 is False jump to label 53
Print String Input error, try again:
n = Readin(int)

label 53:
T1 = 0
T2 = 1
T2*= n
T1+= T2
T2 = 0
T3 = 1
T3*= 0
T2+= T3
T1 = T1<T2
while T1 is True jump to label 52
Print String The factor of n is 
T1 = 0
T2 = 1
T2*= n
T1+= T2
Sending Parametor #1 : T1    to Function prime_factorization
Calling prime_factorization()
void return

iswrong:
Need Parametor #1-- a
T1 = 0
T2 = 1
T2*= 69
T1+= T2
T2 = 0
T3 = 1
T3*= a
T2+= T3
T1 = T1==T2
if T1 is False jump to label 54
T1 = 0
T2 = 1
T2*= 0
T1+= T2
The Return Value Saved in T1

label 54:
T1 = 0
T2 = 1
T2*= 77
T1+= T2
T2 = 0
T3 = 1
T3*= a
T2+= T3
T1 = T1==T2
if T1 is False jump to label 55
T1 = 0
T2 = 1
T2*= 0
T1+= T2
The Return Value Saved in T1

label 55:
T1 = 0
T2 = 1
T2*= 72
T1+= T2
T2 = 0
T3 = 1
T3*= a
T2+= T3
T1 = T1==T2
if T1 is False jump to label 56
T1 = 0
T2 = 1
T2*= 0
T1+= T2
The Return Value Saved in T1

label 56:
Print String !!!
T1 = 0
T2 = 1
T2*= 1
T1+= T2
The Return Value Saved in T1
Did not return Success When you see this!

main:
char kind
Print String Please input Test Type:E(Easy), (M)Middle, H(Hard): 
kind = Readin(char)
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= kind
T3+= T4
Sending Parametor #1 : T3    to Function iswrong
Calling iswrong()
T2 *= Return_iswrong()
T1+= T2
if T1 is False jump to label 57

label 58:
Print String Try Again: 
kind = Readin(char)
T1 = 0
T2 = 1
T3 = 0
T4 = 1
T4*= kind
T3+= T4
Sending Parametor #1 : T3    to Function iswrong
Calling iswrong()
T2 *= Return_iswrong()
T1+= T2
while T1 is True jump to label 58

label 57:
Print String   11111111   
T1 = 0
T2 = 1
T2*= kind
T1+= T2
if T1 != 69  jump to label 59
Print String  in  E! 
Calling define_test()
Print String  after d_t 
Calling operator_test()
Print String  after f_t 
Calling fibonaci_test()
Print String  after fib_t 

label 59:
if T1 != 77  jump to label 60
Calling dowhile_test()
Calling condition_test()
Calling string_test()
Calling gcd_test()

label 60:
if T1 != 72  jump to label 61
Calling define_test()
Calling operator_test()
Calling dowhile_test()
Calling condition_test()
Calling string_test()
Calling miscellaneous_test()
Calling prime_factorization_test()

label 61:
nothing to return
Program Finished

const int _global_constint = 7
const char _message_to_the_world = 42 (ASCLL)
int _global_int_arr[10]
int _global_int
char _global_char_arr[10]
char _global_char

fib:
Need Parametor #1-- k
T1 = k
T2 = 1

T1 = T1>T2
if T1 is False jump to label 1

T2 = k
T3 = 1
T2-= T3
Sending Parametor #1 : T2    to Function fib
Calling fib()
T1 = Return_fib()
T3 = k
T4 = 2
T3-= T4
Sending Parametor #1 : T3    to Function fib
Calling fib()
T2 = Return_fib()
T1+= T2
T2 = 1
T2*= 0
T1-= T2
The Return Value Saved in T1

label 1:
T1 = k
T2 = 0

T1 = T1==T2
if T1 is False jump to label 2

T1 = 1
The Return Value Saved in T1

label 2:
T1 = k
T2 = 1

T1 = T1==T2
if T1 is False jump to label 3

T1 = 1
The Return Value Saved in T1

label 3:
Did not return Success When you see this!

if_test:
T1 = 1
if T1 is False jump to label 4


label 4:
T1 = 0
if T1 is False jump to label 5


label 5:
T1 = 1
if T1 is False jump to label 6


label 6:
T2 = 2
Sending Parametor #1 : T2    to Function fib
Calling fib()
T1 = Return_fib()
if T1 is False jump to label 7

T2 = 3
Sending Parametor #1 : T2    to Function fib
Calling fib()
T1 = Return_fib()
T2 = 1
T1+= T2
if T1 is False jump to label 8

Print String if test  ok

label 8:

label 7:
void return

loop_test:
Need Parametor #1-- loop_initvar
Need Parametor #2-- loop_step
Need Parametor #3-- loop_cnt
int i
int j
int mark_cnt
T1 = loop_initvar
i = T1
T1 = loop_cnt
mark_cnt = T1
T1 = i
j = T1

label 9:
T1 = i
T2 = loop_step
T1+= T2
i = T1
T1 = loop_cnt
T2 = 1
T1-= T2
loop_cnt = T1
T1 = loop_cnt
T2 = 0

T1 = T1>T2
while T1 is True jump to label 9


label 10:
T1 = j
T2 = 1
T1-= T2
j = T1
T1 = j
T2 = 0

T1 = T1>T2
while T1 is True jump to label 10

T1 = j
T2 = 0

T1 = T1==T2
if T1 is False jump to label 11

T1 = i
T2 = loop_initvar
T3 = loop_step
T3*= mark_cnt
T2+= T3

T1 = T1==T2
if T1 is False jump to label 12

Print String loop test ok

label 12:

label 11:
T1 = i
The Return Value Saved in T1
Did not return Success When you see this!

mytoupper:
Need Parametor #1-- inputchar
T1 = inputchar
T2 = 97

T1 = T1==T2
if T1 is False jump to label 13

T1 = 65
The Return Value Saved in T1

label 13:
T1 = inputchar
T2 = 98

T1 = T1==T2
if T1 is False jump to label 14

T1 = 66
The Return Value Saved in T1

label 14:
T1 = inputchar
T2 = 99

T1 = T1==T2
if T1 is False jump to label 15

T1 = 67
The Return Value Saved in T1

label 15:
T1 = inputchar
T2 = 100

T1 = T1==T2
if T1 is False jump to label 16

T1 = 68
The Return Value Saved in T1

label 16:
T1 = inputchar
T2 = 101

T1 = T1==T2
if T1 is False jump to label 17

T1 = 69
The Return Value Saved in T1

label 17:
Did not return Success When you see this!

case_test:
int test_num
char test_char
Print String please input int(0-9) & char values(a-e):
test_num = Readin(int)
test_char = Readin(char)
T1 = test_num
if T1 != 0  jump to label 18
T1 = test_num
T2 = test_char
T1+= T2
Print Num T1

label 18:
if T1 != 1  jump to label 19
T1 = test_num
T2 = test_char
T1+= T2
Print Num T1

label 19:
if T1 != 2  jump to label 20
T1 = test_num
T2 = test_char
T1+= T2
Print Num T1

label 20:
if T1 != 3  jump to label 21
T1 = test_num
T2 = test_char
T1+= T2
Print Num T1

label 21:
if T1 != 4  jump to label 22
T1 = test_num
T2 = test_char
T1+= T2
Print Num T1

label 22:
if T1 != 5  jump to label 23
T1 = test_num
T2 = test_char
T1+= T2
Print Num T1

label 23:
if T1 != 6  jump to label 24
T1 = test_num
T2 = test_char
T1+= T2
Print Num T1

label 24:
if T1 != 7  jump to label 25
T1 = test_num
T2 = test_char
T1+= T2
Print Num T1

label 25:
if T1 != 8  jump to label 26
T1 = test_num
T2 = test_char
T1+= T2
Print Num T1

label 26:
if T1 != 9  jump to label 27
T1 = test_num
T2 = test_char
T1+= T2
Print Num T1

label 27:
T1 = test_char
if T1 != 97  jump to label 28
T2 = test_char
Sending Parametor #1 : T2    to Function mytoupper
Calling mytoupper()
T1 = Return_mytoupper()
Print Char T1(ASCLL)

label 28:
if T1 != 98  jump to label 29
T2 = test_char
Sending Parametor #1 : T2    to Function mytoupper
Calling mytoupper()
T1 = Return_mytoupper()
Print Char T1(ASCLL)

label 29:
if T1 != 99  jump to label 30
T2 = test_char
Sending Parametor #1 : T2    to Function mytoupper
Calling mytoupper()
T1 = Return_mytoupper()
Print Char T1(ASCLL)

label 30:
if T1 != 100  jump to label 31
T2 = test_char
Sending Parametor #1 : T2    to Function mytoupper
Calling mytoupper()
T1 = Return_mytoupper()
Print Char T1(ASCLL)

label 31:
if T1 != 101  jump to label 32
T2 = test_char
Sending Parametor #1 : T2    to Function mytoupper
Calling mytoupper()
T1 = Return_mytoupper()
Print Char T1(ASCLL)

label 32:
void return

setaverage:
int sum
int ret
int i
T1 = 0
sum = T1
T1 = 0
i = T1

label 33:
T1 = sum
T3 = i
T2 = 1
T2 *= _global_char_arr[T3]
T1+= T2
sum = T1
T1 = i
T2 = 1
T1+= T2
i = T1
T1 = i
T2 = 10

T1 = T1<T2
while T1 is True jump to label 33

T1 = sum
T1/= 10
ret = T1
T1 = 0
i = T1
T1 = ret
_global_int = T1
void return

array_test:
int i
T1 = 0
i = T1

label 34:
T1 = i
T2 = 97
_global_char_arr[T1] = T2
T1 = i
T2 = 1
T1+= T2
i = T1
T1 = i
T2 = 10

T1 = T1<T2
while T1 is True jump to label 34

Calling setaverage()
void return

main:
int loop_initvar
int loop_step
int loop_cnt
Calling if_test()
Print String please input 3 int(the 3rd int must >0):
loop_initvar = Readin(int)
loop_step = Readin(int)
loop_cnt = Readin(int)
T2 = loop_initvar
Sending Parametor #1 : T2    to Function loop_test
T2 = loop_step
Sending Parametor #2 : T2    to Function loop_test
T2 = loop_cnt
Sending Parametor #3 : T2    to Function loop_test
Calling loop_test()
T1 = Return_loop_test()
loop_initvar = T1
Calling case_test()
Calling array_test()
T1 = _global_int
T2 = 97

T1 = T1==T2
if T1 is False jump to label 35

Print String passed

label 35:
Program Finished

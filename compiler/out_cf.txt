token: const		symID: 0		SY:const		line: 1		column:1
token: int		symID: 1		SY:int		line: 1		column:7
token: cst1		symID: 37		SY:identifier		line: 1		column:11
token: =		symID: 25		SY:assign		line: 1		column:16
token: 1		symID: 29		SY:number		line: 1		column:18
token: ,		symID: 23		SY:comma		line: 1		column:19
token: cst2		symID: 37		SY:identifier		line: 1		column:21
token: =		symID: 25		SY:assign		line: 1		column:26
token: 2		symID: 29		SY:number		line: 1		column:28
token: ,		symID: 23		SY:comma		line: 1		column:29
token: cst3		symID: 37		SY:identifier		line: 1		column:31
token: =		symID: 25		SY:assign		line: 1		column:36
token: 3		symID: 29		SY:number		line: 1		column:38
token: ;		symID: 24		SY:semi		line: 1		column:39
token: const		symID: 0		SY:const		line: 2		column:1
token: char		symID: 2		SY:char		line: 2		column:7
token: csta		symID: 37		SY:identifier		line: 2		column:12
token: =		symID: 25		SY:assign		line: 2		column:17
token: a		symID: 26		SY:single quota		line: 2		column:19
token: ,		symID: 23		SY:comma		line: 2		column:22
token: cstb		symID: 37		SY:identifier		line: 2		column:24
token: =		symID: 25		SY:assign		line: 2		column:29
token: b		symID: 26		SY:single quota		line: 2		column:31
token: ,		symID: 23		SY:comma		line: 2		column:34
token: cstc		symID: 37		SY:identifier		line: 2		column:36
token: =		symID: 25		SY:assign		line: 2		column:41
token: c		symID: 26		SY:single quota		line: 2		column:43
token: ;		symID: 24		SY:semi		line: 2		column:46
token: int		symID: 1		SY:int		line: 3		column:1
token: g_a		symID: 37		SY:identifier		line: 3		column:5
token: ,		symID: 23		SY:comma		line: 3		column:8
token: g_b		symID: 37		SY:identifier		line: 3		column:10
token: ,		symID: 23		SY:comma		line: 3		column:13
token: g_arr		symID: 37		SY:identifier		line: 3		column:15
token: [		symID: 33		SY:left brack		line: 3		column:20
token: 2048		symID: 29		SY:number		line: 3		column:21
token: ]		symID: 34		SY:right brack		line: 3		column:25
token: ;		symID: 24		SY:semi		line: 3		column:26
token: char		symID: 2		SY:char		line: 4		column:1
token: g_stra		symID: 37		SY:identifier		line: 4		column:6
token: [		symID: 33		SY:left brack		line: 4		column:12
token: 1024		symID: 29		SY:number		line: 4		column:13
token: ]		symID: 34		SY:right brack		line: 4		column:17
token: ,		symID: 23		SY:comma		line: 4		column:18
token: g_strb		symID: 37		SY:identifier		line: 4		column:20
token: [		symID: 33		SY:left brack		line: 4		column:26
token: 2048		symID: 29		SY:number		line: 4		column:27
token: ]		symID: 34		SY:right brack		line: 4		column:31
token: ;		symID: 24		SY:semi		line: 4		column:32
token: void		symID: 3		SY:void		line: 7		column:1
token: const_define		symID: 37		SY:identifier		line: 7		column:6
token: (		symID: 31		SY:left parent		line: 7		column:18
token: )		symID: 32		SY:right parent		line: 7		column:19
token: {		symID: 35		SY:left brace		line: 7		column:20
token: const		symID: 0		SY:const		line: 8		column:5
token: int		symID: 1		SY:int		line: 8		column:11
token: a		symID: 37		SY:identifier		line: 8		column:15
token: =		symID: 25		SY:assign		line: 8		column:17
token: 1		symID: 29		SY:number		line: 8		column:19
token: ;		symID: 24		SY:semi		line: 8		column:20
token: const		symID: 0		SY:const		line: 9		column:5
token: int		symID: 1		SY:int		line: 9		column:11
token: b		symID: 37		SY:identifier		line: 9		column:15
token: =		symID: 25		SY:assign		line: 9		column:17
token: 0		symID: 29		SY:number		line: 9		column:19
token: ,		symID: 23		SY:comma		line: 9		column:20
token: c		symID: 37		SY:identifier		line: 9		column:22
token: =		symID: 25		SY:assign		line: 9		column:24
token: -		symID: 14		SY:sub		line: 9		column:26
token: 1		symID: 29		SY:number		line: 9		column:27
token: ;		symID: 24		SY:semi		line: 9		column:28
token: const		symID: 0		SY:const		line: 10		column:5
token: char		symID: 2		SY:char		line: 10		column:11
token: cst23		symID: 37		SY:identifier		line: 10		column:16
token: =		symID: 25		SY:assign		line: 10		column:21
token: x		symID: 26		SY:single quota		line: 10		column:22
token: ;		symID: 24		SY:semi		line: 10		column:25
token: const		symID: 0		SY:const		line: 11		column:5
token: char		symID: 2		SY:char		line: 11		column:11
token: cst24		symID: 37		SY:identifier		line: 11		column:16
token: =		symID: 25		SY:assign		line: 11		column:21
token: z		symID: 26		SY:single quota		line: 11		column:22
token: ,		symID: 23		SY:comma		line: 11		column:25
token: consta0		symID: 37		SY:identifier		line: 11		column:27
token: =		symID: 25		SY:assign		line: 11		column:34
token: A		symID: 26		SY:single quota		line: 11		column:35
token: ,		symID: 23		SY:comma		line: 11		column:38
token: csta1		symID: 37		SY:identifier		line: 11		column:40
token: =		symID: 25		SY:assign		line: 11		column:45
token: 1		symID: 26		SY:single quota		line: 11		column:46
token: ,		symID: 23		SY:comma		line: 11		column:49
token: cst_div		symID: 37		SY:identifier		line: 11		column:51
token: =		symID: 25		SY:assign		line: 11		column:59
token: /		symID: 26		SY:single quota		line: 11		column:61
token: ;		symID: 24		SY:semi		line: 11		column:64
token: printf		symID: 11		SY:printf		line: 12		column:1
token: (		symID: 31		SY:left parent		line: 12		column:7
token:  const_define 		symID: 30		SY:string		line: 12		column:8
token: )		symID: 32		SY:right parent		line: 12		column:24
token: ;		symID: 24		SY:semi		line: 12		column:25
token: printf		symID: 11		SY:printf		line: 13		column:1
token: (		symID: 31		SY:left parent		line: 13		column:7
token:            a:		symID: 30		SY:string		line: 13		column:8
token: )		symID: 32		SY:right parent		line: 13		column:23
token: ;		symID: 24		SY:semi		line: 13		column:24
token: printf		symID: 11		SY:printf		line: 14		column:5
token: (		symID: 31		SY:left parent		line: 14		column:11
token: a		symID: 37		SY:identifier		line: 14		column:12
token: )		symID: 32		SY:right parent		line: 14		column:13
token: ;		symID: 24		SY:semi		line: 14		column:14
token: printf		symID: 11		SY:printf		line: 15		column:5
token: (		symID: 31		SY:left parent		line: 15		column:11
token:        cst_div:		symID: 30		SY:string		line: 15		column:12
token: )		symID: 32		SY:right parent		line: 15		column:29
token: ;		symID: 24		SY:semi		line: 15		column:30
token: printf		symID: 11		SY:printf		line: 16		column:5
token: (		symID: 31		SY:left parent		line: 16		column:11
token: cst_div		symID: 37		SY:identifier		line: 16		column:12
token: )		symID: 32		SY:right parent		line: 16		column:19
token: ;		symID: 24		SY:semi		line: 16		column:20
token: printf		symID: 11		SY:printf		line: 17		column:5
token: (		symID: 31		SY:left parent		line: 17		column:11
token:        		symID: 30		SY:string		line: 17		column:12
token: )		symID: 32		SY:right parent		line: 17		column:21
token: ;		symID: 24		SY:semi		line: 17		column:22
token: }		symID: 36		SY:right brace		line: 18		column:1
token: void		symID: 3		SY:void		line: 20		column:1
token: const_define_test		symID: 37		SY:identifier		line: 20		column:6
token: (		symID: 31		SY:left parent		line: 20		column:23
token: )		symID: 32		SY:right parent		line: 20		column:24
token: {		symID: 35		SY:left brace		line: 20		column:25
token: printf		symID: 11		SY:printf		line: 21		column:1
token: (		symID: 31		SY:left parent		line: 21		column:7
token:  const_define_test 		symID: 30		SY:string		line: 21		column:8
token: )		symID: 32		SY:right parent		line: 21		column:29
token: ;		symID: 24		SY:semi		line: 21		column:30
token: const_define		symID: 37		SY:identifier		line: 22		column:5
token: (		symID: 31		SY:left parent		line: 22		column:17
token: )		symID: 32		SY:right parent		line: 22		column:18
token: ;		symID: 24		SY:semi		line: 22		column:19
token: }		symID: 36		SY:right brace		line: 23		column:1
token: void		symID: 3		SY:void		line: 25		column:1
token: var_define		symID: 37		SY:identifier		line: 25		column:6
token: (		symID: 31		SY:left parent		line: 25		column:16
token: )		symID: 32		SY:right parent		line: 25		column:17
token: {		symID: 35		SY:left brace		line: 25		column:18
token: int		symID: 1		SY:int		line: 26		column:5
token: a		symID: 37		SY:identifier		line: 26		column:9
token: ,		symID: 23		SY:comma		line: 26		column:10
token: arr		symID: 37		SY:identifier		line: 26		column:12
token: [		symID: 33		SY:left brack		line: 26		column:15
token: 1		symID: 29		SY:number		line: 26		column:16
token: ]		symID: 34		SY:right brack		line: 26		column:17
token: ,		symID: 23		SY:comma		line: 26		column:18
token: _a		symID: 37		SY:identifier		line: 26		column:20
token: ,		symID: 23		SY:comma		line: 26		column:22
token: _arr		symID: 37		SY:identifier		line: 26		column:24
token: [		symID: 33		SY:left brack		line: 26		column:28
token: 2		symID: 29		SY:number		line: 26		column:29
token: ]		symID: 34		SY:right brack		line: 26		column:30
token: ,		symID: 23		SY:comma		line: 26		column:31
token: a1		symID: 37		SY:identifier		line: 26		column:33
token: ,		symID: 23		SY:comma		line: 26		column:35
token: arr1		symID: 37		SY:identifier		line: 26		column:37
token: [		symID: 33		SY:left brack		line: 26		column:41
token: 3		symID: 29		SY:number		line: 26		column:42
token: ]		symID: 34		SY:right brack		line: 26		column:43
token: ;		symID: 24		SY:semi		line: 26		column:44
token: char		symID: 2		SY:char		line: 27		column:5
token: b		symID: 37		SY:identifier		line: 27		column:10
token: ,		symID: 23		SY:comma		line: 27		column:11
token: strb		symID: 37		SY:identifier		line: 27		column:13
token: [		symID: 33		SY:left brack		line: 27		column:17
token: 1		symID: 29		SY:number		line: 27		column:18
token: ]		symID: 34		SY:right brack		line: 27		column:19
token: ,		symID: 23		SY:comma		line: 27		column:20
token: _b		symID: 37		SY:identifier		line: 27		column:22
token: ,		symID: 23		SY:comma		line: 27		column:24
token: _bstr		symID: 37		SY:identifier		line: 27		column:26
token: [		symID: 33		SY:left brack		line: 27		column:31
token: 2		symID: 29		SY:number		line: 27		column:32
token: ]		symID: 34		SY:right brack		line: 27		column:33
token: ,		symID: 23		SY:comma		line: 27		column:34
token: _b1		symID: 37		SY:identifier		line: 27		column:36
token: ,		symID: 23		SY:comma		line: 27		column:39
token: _bstr1		symID: 37		SY:identifier		line: 27		column:41
token: [		symID: 33		SY:left brack		line: 27		column:47
token: 3		symID: 29		SY:number		line: 27		column:48
token: ]		symID: 34		SY:right brack		line: 27		column:49
token: ;		symID: 24		SY:semi		line: 27		column:50
token: int		symID: 1		SY:int		line: 28		column:5
token: c		symID: 37		SY:identifier		line: 28		column:9
token: ;		symID: 24		SY:semi		line: 28		column:10
token: char		symID: 2		SY:char		line: 29		column:5
token: z		symID: 37		SY:identifier		line: 29		column:10
token: ;		symID: 24		SY:semi		line: 29		column:11
token: printf		symID: 11		SY:printf		line: 30		column:1
token: (		symID: 31		SY:left parent		line: 30		column:7
token:  var_define 		symID: 30		SY:string		line: 30		column:8
token: )		symID: 32		SY:right parent		line: 30		column:22
token: ;		symID: 24		SY:semi		line: 30		column:23
token: }		symID: 36		SY:right brace		line: 31		column:1
token: void		symID: 3		SY:void		line: 32		column:1
token: var_define_test		symID: 37		SY:identifier		line: 32		column:6
token: (		symID: 31		SY:left parent		line: 32		column:21
token: )		symID: 32		SY:right parent		line: 32		column:22
token: {		symID: 35		SY:left brace		line: 32		column:23
token: printf		symID: 11		SY:printf		line: 33		column:1
token: (		symID: 31		SY:left parent		line: 33		column:7
token:  var_define_test 		symID: 30		SY:string		line: 33		column:8
token: )		symID: 32		SY:right parent		line: 33		column:27
token: ;		symID: 24		SY:semi		line: 33		column:28
token: var_define		symID: 37		SY:identifier		line: 34		column:5
token: (		symID: 31		SY:left parent		line: 34		column:15
token: )		symID: 32		SY:right parent		line: 34		column:16
token: ;		symID: 24		SY:semi		line: 34		column:17
token: }		symID: 36		SY:right brace		line: 35		column:1
token: void		symID: 3		SY:void		line: 37		column:1
token: define		symID: 37		SY:identifier		line: 37		column:6
token: (		symID: 31		SY:left parent		line: 37		column:12
token: )		symID: 32		SY:right parent		line: 37		column:13
token: {		symID: 35		SY:left brace		line: 37		column:14
token: const		symID: 0		SY:const		line: 38		column:5
token: int		symID: 1		SY:int		line: 38		column:11
token: int1		symID: 37		SY:identifier		line: 38		column:15
token: =		symID: 25		SY:assign		line: 38		column:20
token: 1		symID: 29		SY:number		line: 38		column:22
token: ;		symID: 24		SY:semi		line: 38		column:23
token: const		symID: 0		SY:const		line: 39		column:5
token: char		symID: 2		SY:char		line: 39		column:11
token: cst24		symID: 37		SY:identifier		line: 39		column:16
token: =		symID: 25		SY:assign		line: 39		column:21
token: z		symID: 26		SY:single quota		line: 39		column:22
token: ,		symID: 23		SY:comma		line: 39		column:25
token: consta0		symID: 37		SY:identifier		line: 39		column:27
token: =		symID: 25		SY:assign		line: 39		column:34
token: A		symID: 26		SY:single quota		line: 39		column:35
token: ;		symID: 24		SY:semi		line: 39		column:38
token: int		symID: 1		SY:int		line: 40		column:5
token: val1		symID: 37		SY:identifier		line: 40		column:9
token: ;		symID: 24		SY:semi		line: 40		column:13
token: char		symID: 2		SY:char		line: 41		column:5
token: b		symID: 37		SY:identifier		line: 41		column:10
token: ,		symID: 23		SY:comma		line: 41		column:11
token: strb		symID: 37		SY:identifier		line: 41		column:13
token: [		symID: 33		SY:left brack		line: 41		column:17
token: 1		symID: 29		SY:number		line: 41		column:18
token: ]		symID: 34		SY:right brack		line: 41		column:19
token: ;		symID: 24		SY:semi		line: 41		column:20
token: printf		symID: 11		SY:printf		line: 42		column:5
token: (		symID: 31		SY:left parent		line: 42		column:11
token:  define 		symID: 30		SY:string		line: 42		column:12
token: )		symID: 32		SY:right parent		line: 42		column:22
token: ;		symID: 24		SY:semi		line: 42		column:23
token: }		symID: 36		SY:right brace		line: 43		column:1
token: void		symID: 3		SY:void		line: 45		column:1
token: define_test		symID: 37		SY:identifier		line: 45		column:6
token: (		symID: 31		SY:left parent		line: 45		column:17
token: )		symID: 32		SY:right parent		line: 45		column:18
token: {		symID: 35		SY:left brace		line: 45		column:19
token: printf		symID: 11		SY:printf		line: 46		column:1
token: (		symID: 31		SY:left parent		line: 46		column:7
token:  define_test 		symID: 30		SY:string		line: 46		column:8
token: )		symID: 32		SY:right parent		line: 46		column:23
token: ;		symID: 24		SY:semi		line: 46		column:24
token: var_define_test		symID: 37		SY:identifier		line: 47		column:5
token: (		symID: 31		SY:left parent		line: 47		column:20
token: )		symID: 32		SY:right parent		line: 47		column:21
token: ;		symID: 24		SY:semi		line: 47		column:22
token: const_define_test		symID: 37		SY:identifier		line: 48		column:5
token: (		symID: 31		SY:left parent		line: 48		column:22
token: )		symID: 32		SY:right parent		line: 48		column:23
token: ;		symID: 24		SY:semi		line: 48		column:24
token: define		symID: 37		SY:identifier		line: 49		column:5
token: (		symID: 31		SY:left parent		line: 49		column:11
token: )		symID: 32		SY:right parent		line: 49		column:12
token: ;		symID: 24		SY:semi		line: 49		column:13
token: printf		symID: 11		SY:printf		line: 50		column:5
token: (		symID: 31		SY:left parent		line: 50		column:11
token: define test passed		symID: 30		SY:string		line: 50		column:12
token: )		symID: 32		SY:right parent		line: 50		column:32
token: ;		symID: 24		SY:semi		line: 50		column:33
token: }		symID: 36		SY:right brace		line: 51		column:1
token: void		symID: 3		SY:void		line: 53		column:1
token: operator		symID: 37		SY:identifier		line: 53		column:6
token: (		symID: 31		SY:left parent		line: 53		column:14
token: )		symID: 32		SY:right parent		line: 53		column:15
token: {		symID: 35		SY:left brace		line: 53		column:16
token: int		symID: 1		SY:int		line: 54		column:5
token: a		symID: 37		SY:identifier		line: 54		column:9
token: ,		symID: 23		SY:comma		line: 54		column:10
token: b		symID: 37		SY:identifier		line: 54		column:12
token: ,		symID: 23		SY:comma		line: 54		column:13
token: c		symID: 37		SY:identifier		line: 54		column:15
token: ,		symID: 23		SY:comma		line: 54		column:16
token: d		symID: 37		SY:identifier		line: 54		column:18
token: ,		symID: 23		SY:comma		line: 54		column:19
token: e		symID: 37		SY:identifier		line: 54		column:21
token: ,		symID: 23		SY:comma		line: 54		column:22
token: f		symID: 37		SY:identifier		line: 54		column:24
token: ;		symID: 24		SY:semi		line: 54		column:25
token: printf		symID: 11		SY:printf		line: 55		column:1
token: (		symID: 31		SY:left parent		line: 55		column:7
token:  operator 		symID: 30		SY:string		line: 55		column:8
token: )		symID: 32		SY:right parent		line: 55		column:20
token: ;		symID: 24		SY:semi		line: 55		column:21
token: a		symID: 37		SY:identifier		line: 56		column:5
token: =		symID: 25		SY:assign		line: 56		column:7
token: 1		symID: 29		SY:number		line: 56		column:9
token: ;		symID: 24		SY:semi		line: 56		column:10
token: b		symID: 37		SY:identifier		line: 56		column:12
token: =		symID: 25		SY:assign		line: 56		column:14
token: 1		symID: 29		SY:number		line: 56		column:16
token: +		symID: 13		SY:plus		line: 56		column:18
token: 2		symID: 29		SY:number		line: 56		column:20
token: ;		symID: 24		SY:semi		line: 56		column:21
token: c		symID: 37		SY:identifier		line: 56		column:23
token: =		symID: 25		SY:assign		line: 56		column:25
token: 3		symID: 29		SY:number		line: 56		column:27
token: *		symID: 15		SY:mult		line: 56		column:29
token: 1		symID: 29		SY:number		line: 56		column:31
token: ;		symID: 24		SY:semi		line: 56		column:32
token: d		symID: 37		SY:identifier		line: 56		column:34
token: =		symID: 25		SY:assign		line: 56		column:36
token: -		symID: 14		SY:sub		line: 56		column:38
token: 4		symID: 29		SY:number		line: 56		column:39
token: ;		symID: 24		SY:semi		line: 56		column:40
token: e		symID: 37		SY:identifier		line: 56		column:42
token: =		symID: 25		SY:assign		line: 56		column:44
token: 5		symID: 29		SY:number		line: 56		column:46
token: ;		symID: 24		SY:semi		line: 56		column:47
token: f		symID: 37		SY:identifier		line: 56		column:49
token: =		symID: 25		SY:assign		line: 56		column:51
token: 6		symID: 29		SY:number		line: 56		column:53
token: ;		symID: 24		SY:semi		line: 56		column:54
token: a		symID: 37		SY:identifier		line: 57		column:5
token: =		symID: 25		SY:assign		line: 57		column:7
token: (		symID: 31		SY:left parent		line: 57		column:9
token: b		symID: 37		SY:identifier		line: 57		column:10
token: *		symID: 15		SY:mult		line: 57		column:12
token: 3		symID: 29		SY:number		line: 57		column:14
token: )		symID: 32		SY:right parent		line: 57		column:15
token: +		symID: 13		SY:plus		line: 57		column:17
token: c		symID: 37		SY:identifier		line: 57		column:19
token: -		symID: 14		SY:sub		line: 57		column:21
token: d		symID: 37		SY:identifier		line: 57		column:23
token: /		symID: 16		SY:div		line: 57		column:25
token: 4		symID: 29		SY:number		line: 57		column:27
token: +		symID: 13		SY:plus		line: 57		column:29
token: a		symID: 37		SY:identifier		line: 57		column:31
token: /		symID: 16		SY:div		line: 57		column:33
token: a		symID: 37		SY:identifier		line: 57		column:35
token: ;		symID: 24		SY:semi		line: 57		column:36
token: b		symID: 37		SY:identifier		line: 58		column:5
token: =		symID: 25		SY:assign		line: 58		column:7
token: +		symID: 13		SY:plus		line: 58		column:9
token: 0		symID: 29		SY:number		line: 58		column:11
token: +		symID: 13		SY:plus		line: 58		column:13
token: a		symID: 37		SY:identifier		line: 58		column:15
token: +		symID: 13		SY:plus		line: 58		column:17
token: (		symID: 31		SY:left parent		line: 58		column:19
token: a		symID: 37		SY:identifier		line: 58		column:20
token: *		symID: 15		SY:mult		line: 58		column:22
token: 3		symID: 29		SY:number		line: 58		column:24
token: )		symID: 32		SY:right parent		line: 58		column:25
token: +		symID: 13		SY:plus		line: 58		column:27
token: c		symID: 37		SY:identifier		line: 58		column:29
token: -		symID: 14		SY:sub		line: 58		column:31
token: d		symID: 37		SY:identifier		line: 58		column:33
token: /		symID: 16		SY:div		line: 58		column:35
token: 4		symID: 29		SY:number		line: 58		column:37
token: +		symID: 13		SY:plus		line: 58		column:39
token: e		symID: 37		SY:identifier		line: 58		column:41
token: *		symID: 15		SY:mult		line: 58		column:43
token: f		symID: 37		SY:identifier		line: 58		column:45
token: ;		symID: 24		SY:semi		line: 58		column:46
token: e		symID: 37		SY:identifier		line: 59		column:5
token: =		symID: 25		SY:assign		line: 59		column:7
token: -		symID: 14		SY:sub		line: 59		column:9
token: (		symID: 31		SY:left parent		line: 59		column:10
token: a		symID: 37		SY:identifier		line: 59		column:11
token: )		symID: 32		SY:right parent		line: 59		column:12
token: +		symID: 13		SY:plus		line: 59		column:14
token: b		symID: 37		SY:identifier		line: 59		column:16
token: *		symID: 15		SY:mult		line: 59		column:18
token: 0		symID: 29		SY:number		line: 59		column:20
token: -		symID: 14		SY:sub		line: 59		column:22
token: (		symID: 31		SY:left parent		line: 59		column:24
token: 1		symID: 29		SY:number		line: 59		column:25
token: -		symID: 14		SY:sub		line: 59		column:27
token: 0		symID: 29		SY:number		line: 59		column:29
token: )		symID: 32		SY:right parent		line: 59		column:30
token: ;		symID: 24		SY:semi		line: 59		column:31
token: }		symID: 36		SY:right brace		line: 60		column:1
token: void		symID: 3		SY:void		line: 62		column:1
token: operator_test		symID: 37		SY:identifier		line: 62		column:6
token: (		symID: 31		SY:left parent		line: 62		column:19
token: )		symID: 32		SY:right parent		line: 62		column:20
token: {		symID: 35		SY:left brace		line: 62		column:21
token: printf		symID: 11		SY:printf		line: 63		column:1
token: (		symID: 31		SY:left parent		line: 63		column:7
token:  operator_test 		symID: 30		SY:string		line: 63		column:8
token: )		symID: 32		SY:right parent		line: 63		column:25
token: ;		symID: 24		SY:semi		line: 63		column:26
token: operator		symID: 37		SY:identifier		line: 64		column:5
token: (		symID: 31		SY:left parent		line: 64		column:13
token: )		symID: 32		SY:right parent		line: 64		column:14
token: ;		symID: 24		SY:semi		line: 64		column:15
token: printf		symID: 11		SY:printf		line: 65		column:5
token: (		symID: 31		SY:left parent		line: 65		column:11
token: operator test passed		symID: 30		SY:string		line: 65		column:12
token: )		symID: 32		SY:right parent		line: 65		column:34
token: ;		symID: 24		SY:semi		line: 65		column:35
token: }		symID: 36		SY:right brace		line: 66		column:1
token: void		symID: 3		SY:void		line: 67		column:1
token: string		symID: 37		SY:identifier		line: 67		column:6
token: (		symID: 31		SY:left parent		line: 67		column:12
token: )		symID: 32		SY:right parent		line: 67		column:13
token: {		symID: 35		SY:left brace		line: 67		column:14
token: printf		symID: 11		SY:printf		line: 68		column:1
token: (		symID: 31		SY:left parent		line: 68		column:7
token:  string 		symID: 30		SY:string		line: 68		column:8
token: )		symID: 32		SY:right parent		line: 68		column:18
token: ;		symID: 24		SY:semi		line: 68		column:19
token: printf		symID: 11		SY:printf		line: 69		column:5
token: (		symID: 31		SY:left parent		line: 69		column:11
token: ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz		symID: 30		SY:string		line: 69		column:12
token: )		symID: 32		SY:right parent		line: 69		column:67
token: ;		symID: 24		SY:semi		line: 69		column:68
token: printf		symID: 11		SY:printf		line: 70		column:5
token: (		symID: 31		SY:left parent		line: 70		column:11
token: !#$%&'()*+,-./:;<=>?@[]^_`{|}~		symID: 30		SY:string		line: 70		column:12
token: )		symID: 32		SY:right parent		line: 70		column:44
token: ;		symID: 24		SY:semi		line: 70		column:45
token: }		symID: 36		SY:right brace		line: 71		column:1
token: void		symID: 3		SY:void		line: 72		column:1
token: string_test		symID: 37		SY:identifier		line: 72		column:6
token: (		symID: 31		SY:left parent		line: 72		column:17
token: )		symID: 32		SY:right parent		line: 72		column:18
token: {		symID: 35		SY:left brace		line: 72		column:19
token: printf		symID: 11		SY:printf		line: 73		column:1
token: (		symID: 31		SY:left parent		line: 73		column:7
token:  string_test 		symID: 30		SY:string		line: 73		column:8
token: )		symID: 32		SY:right parent		line: 73		column:23
token: ;		symID: 24		SY:semi		line: 73		column:24
token: string		symID: 37		SY:identifier		line: 74		column:5
token: (		symID: 31		SY:left parent		line: 74		column:11
token: )		symID: 32		SY:right parent		line: 74		column:12
token: ;		symID: 24		SY:semi		line: 74		column:13
token: }		symID: 36		SY:right brace		line: 76		column:1
token: void		symID: 3		SY:void		line: 77		column:1
token: dowhile		symID: 37		SY:identifier		line: 77		column:6
token: (		symID: 31		SY:left parent		line: 77		column:13
token: )		symID: 32		SY:right parent		line: 77		column:14
token: {		symID: 35		SY:left brace		line: 77		column:15
token: int		symID: 1		SY:int		line: 78		column:5
token: i		symID: 37		SY:identifier		line: 78		column:9
token: ;		symID: 24		SY:semi		line: 78		column:10
token: printf		symID: 11		SY:printf		line: 79		column:1
token: (		symID: 31		SY:left parent		line: 79		column:7
token:  dowhile 		symID: 30		SY:string		line: 79		column:8
token: )		symID: 32		SY:right parent		line: 79		column:19
token: ;		symID: 24		SY:semi		line: 79		column:20
token: i		symID: 37		SY:identifier		line: 80		column:5
token: =		symID: 25		SY:assign		line: 80		column:7
token: 100		symID: 29		SY:number		line: 80		column:9
token: ;		symID: 24		SY:semi		line: 80		column:12
token: do		symID: 5		SY:do		line: 82		column:5
token: {		symID: 35		SY:left brace		line: 82		column:8
token: if		symID: 9		SY:if		line: 83		column:9
token: (		symID: 31		SY:left parent		line: 83		column:12
token: i		symID: 37		SY:identifier		line: 83		column:13
token: >=		symID: 19		SY:great or equal		line: 83		column:15
token: 50		symID: 29		SY:number		line: 83		column:18
token: )		symID: 32		SY:right parent		line: 83		column:20
token: i		symID: 37		SY:identifier		line: 84		column:13
token: =		symID: 25		SY:assign		line: 84		column:15
token: i		symID: 37		SY:identifier		line: 84		column:17
token: /		symID: 16		SY:div		line: 84		column:19
token: 2		symID: 29		SY:number		line: 84		column:21
token: ;		symID: 24		SY:semi		line: 84		column:22
token: if		symID: 9		SY:if		line: 85		column:9
token: (		symID: 31		SY:left parent		line: 85		column:12
token: i		symID: 37		SY:identifier		line: 85		column:13
token: <		symID: 18		SY:less		line: 85		column:15
token: 50		symID: 29		SY:number		line: 85		column:17
token: )		symID: 32		SY:right parent		line: 85		column:19
token: i		symID: 37		SY:identifier		line: 86		column:13
token: =		symID: 25		SY:assign		line: 86		column:15
token: (		symID: 31		SY:left parent		line: 86		column:17
token: i		symID: 37		SY:identifier		line: 86		column:18
token: +		symID: 13		SY:plus		line: 86		column:20
token: 10		symID: 29		SY:number		line: 86		column:22
token: )		symID: 32		SY:right parent		line: 86		column:24
token: /		symID: 16		SY:div		line: 86		column:26
token: 10		symID: 29		SY:number		line: 86		column:28
token: ;		symID: 24		SY:semi		line: 86		column:30
token: }		symID: 36		SY:right brace		line: 87		column:5
token: while		symID: 6		SY:while		line: 87		column:7
token: (		symID: 31		SY:left parent		line: 87		column:13
token: i		symID: 37		SY:identifier		line: 87		column:14
token: >=		symID: 19		SY:great or equal		line: 87		column:16
token: 10		symID: 29		SY:number		line: 87		column:19
token: )		symID: 32		SY:right parent		line: 87		column:21
token: ;		symID: 24		SY:semi		line: 87		column:22
token: do		symID: 5		SY:do		line: 88		column:5
token: {		symID: 35		SY:left brace		line: 88		column:8
token: i		symID: 37		SY:identifier		line: 89		column:9
token: =		symID: 25		SY:assign		line: 89		column:11
token: i		symID: 37		SY:identifier		line: 89		column:13
token: -		symID: 14		SY:sub		line: 89		column:15
token: 1		symID: 29		SY:number		line: 89		column:17
token: ;		symID: 24		SY:semi		line: 89		column:18
token: printf		symID: 11		SY:printf		line: 90		column:9
token: (		symID: 31		SY:left parent		line: 90		column:15
token: dowhile test passed		symID: 30		SY:string		line: 90		column:16
token: )		symID: 32		SY:right parent		line: 90		column:37
token: ;		symID: 24		SY:semi		line: 90		column:38
token: }		symID: 36		SY:right brace		line: 92		column:5
token: while		symID: 6		SY:while		line: 92		column:6
token: (		symID: 31		SY:left parent		line: 92		column:12
token: 0		symID: 29		SY:number		line: 92		column:13
token: )		symID: 32		SY:right parent		line: 92		column:14
token: }		symID: 36		SY:right brace		line: 93		column:1
token: void		symID: 3		SY:void		line: 95		column:1
token: dowhile_test		symID: 37		SY:identifier		line: 95		column:6
token: (		symID: 31		SY:left parent		line: 95		column:18
token: )		symID: 32		SY:right parent		line: 95		column:19
token: {		symID: 35		SY:left brace		line: 95		column:20
token: printf		symID: 11		SY:printf		line: 96		column:1
token: (		symID: 31		SY:left parent		line: 96		column:7
token:  dowhile_test 		symID: 30		SY:string		line: 96		column:8
token: )		symID: 32		SY:right parent		line: 96		column:24
token: ;		symID: 24		SY:semi		line: 96		column:25
token: dowhile		symID: 37		SY:identifier		line: 97		column:5
token: (		symID: 31		SY:left parent		line: 97		column:12
token: )		symID: 32		SY:right parent		line: 97		column:13
token: ;		symID: 24		SY:semi		line: 97		column:14
token: }		symID: 36		SY:right brace		line: 98		column:1
token: void		symID: 3		SY:void		line: 100		column:1
token: ifcondition		symID: 37		SY:identifier		line: 100		column:6
token: (		symID: 31		SY:left parent		line: 100		column:17
token: )		symID: 32		SY:right parent		line: 100		column:18
token: {		symID: 35		SY:left brace		line: 100		column:19
token: int		symID: 1		SY:int		line: 101		column:5
token: a		symID: 37		SY:identifier		line: 101		column:9
token: ,		symID: 23		SY:comma		line: 101		column:10
token: rightnumber		symID: 37		SY:identifier		line: 101		column:12
token: ;		symID: 24		SY:semi		line: 101		column:23
token: printf		symID: 11		SY:printf		line: 102		column:1
token: (		symID: 31		SY:left parent		line: 102		column:7
token:  ifcondition 		symID: 30		SY:string		line: 102		column:8
token: )		symID: 32		SY:right parent		line: 102		column:23
token: ;		symID: 24		SY:semi		line: 102		column:24
token: a		symID: 37		SY:identifier		line: 103		column:5
token: =		symID: 25		SY:assign		line: 103		column:7
token: 1		symID: 29		SY:number		line: 103		column:9
token: ;		symID: 24		SY:semi		line: 103		column:10
token: rightnumber		symID: 37		SY:identifier		line: 104		column:5
token: =		symID: 25		SY:assign		line: 104		column:17
token: 0		symID: 29		SY:number		line: 104		column:19
token: ;		symID: 24		SY:semi		line: 104		column:20
token: if		symID: 9		SY:if		line: 105		column:5
token: (		symID: 31		SY:left parent		line: 105		column:8
token: a		symID: 37		SY:identifier		line: 105		column:9
token: ==		symID: 21		SY:equal		line: 105		column:11
token: 1		symID: 29		SY:number		line: 105		column:14
token: )		symID: 32		SY:right parent		line: 105		column:15
token: rightnumber		symID: 37		SY:identifier		line: 105		column:17
token: =		symID: 25		SY:assign		line: 105		column:29
token: rightnumber		symID: 37		SY:identifier		line: 105		column:31
token: +		symID: 13		SY:plus		line: 105		column:43
token: 1		symID: 29		SY:number		line: 105		column:45
token: ;		symID: 24		SY:semi		line: 105		column:46
token: a		symID: 37		SY:identifier		line: 106		column:5
token: =		symID: 25		SY:assign		line: 106		column:7
token: 2		symID: 29		SY:number		line: 106		column:9
token: ;		symID: 24		SY:semi		line: 106		column:10
token: if		symID: 9		SY:if		line: 107		column:5
token: (		symID: 31		SY:left parent		line: 107		column:8
token: a		symID: 37		SY:identifier		line: 107		column:9
token: >		symID: 17		SY:great		line: 107		column:11
token: 1		symID: 29		SY:number		line: 107		column:13
token: )		symID: 32		SY:right parent		line: 107		column:14
token: rightnumber		symID: 37		SY:identifier		line: 107		column:16
token: =		symID: 25		SY:assign		line: 107		column:28
token: rightnumber		symID: 37		SY:identifier		line: 107		column:30
token: +		symID: 13		SY:plus		line: 107		column:42
token: 1		symID: 29		SY:number		line: 107		column:44
token: ;		symID: 24		SY:semi		line: 107		column:45
token: a		symID: 37		SY:identifier		line: 108		column:5
token: =		symID: 25		SY:assign		line: 108		column:7
token: 0		symID: 29		SY:number		line: 108		column:9
token: ;		symID: 24		SY:semi		line: 108		column:10
token: if		symID: 9		SY:if		line: 109		column:5
token: (		symID: 31		SY:left parent		line: 109		column:8
token: a		symID: 37		SY:identifier		line: 109		column:9
token: <		symID: 18		SY:less		line: 109		column:11
token: 1		symID: 29		SY:number		line: 109		column:13
token: )		symID: 32		SY:right parent		line: 109		column:14
token: rightnumber		symID: 37		SY:identifier		line: 109		column:16
token: =		symID: 25		SY:assign		line: 109		column:28
token: rightnumber		symID: 37		SY:identifier		line: 109		column:30
token: +		symID: 13		SY:plus		line: 109		column:42
token: 1		symID: 29		SY:number		line: 109		column:44
token: ;		symID: 24		SY:semi		line: 109		column:45
token: if		symID: 9		SY:if		line: 110		column:5
token: (		symID: 31		SY:left parent		line: 110		column:8
token: a		symID: 37		SY:identifier		line: 110		column:9
token: !=		symID: 22		SY:not equal		line: 110		column:11
token: 1		symID: 29		SY:number		line: 110		column:14
token: )		symID: 32		SY:right parent		line: 110		column:15
token: rightnumber		symID: 37		SY:identifier		line: 110		column:17
token: =		symID: 25		SY:assign		line: 110		column:29
token: rightnumber		symID: 37		SY:identifier		line: 110		column:31
token: +		symID: 13		SY:plus		line: 110		column:43
token: 1		symID: 29		SY:number		line: 110		column:45
token: ;		symID: 24		SY:semi		line: 110		column:46
token: if		symID: 9		SY:if		line: 111		column:5
token: (		symID: 31		SY:left parent		line: 111		column:8
token: a		symID: 37		SY:identifier		line: 111		column:9
token: >=		symID: 19		SY:great or equal		line: 111		column:11
token: 0		symID: 29		SY:number		line: 111		column:14
token: )		symID: 32		SY:right parent		line: 111		column:15
token: rightnumber		symID: 37		SY:identifier		line: 111		column:17
token: =		symID: 25		SY:assign		line: 111		column:29
token: rightnumber		symID: 37		SY:identifier		line: 111		column:31
token: +		symID: 13		SY:plus		line: 111		column:43
token: 1		symID: 29		SY:number		line: 111		column:45
token: ;		symID: 24		SY:semi		line: 111		column:46
token: if		symID: 9		SY:if		line: 112		column:5
token: (		symID: 31		SY:left parent		line: 112		column:8
token: a		symID: 37		SY:identifier		line: 112		column:9
token: <=		symID: 20		SY:less or equal		line: 112		column:11
token: 0		symID: 29		SY:number		line: 112		column:14
token: )		symID: 32		SY:right parent		line: 112		column:15
token: rightnumber		symID: 37		SY:identifier		line: 112		column:17
token: =		symID: 25		SY:assign		line: 112		column:29
token: rightnumber		symID: 37		SY:identifier		line: 112		column:31
token: +		symID: 13		SY:plus		line: 112		column:43
token: 1		symID: 29		SY:number		line: 112		column:45
token: ;		symID: 24		SY:semi		line: 112		column:46
token: if		symID: 9		SY:if		line: 113		column:5
token: (		symID: 31		SY:left parent		line: 113		column:8
token: rightnumber		symID: 37		SY:identifier		line: 113		column:9
token: !=		symID: 22		SY:not equal		line: 113		column:21
token: (		symID: 31		SY:left parent		line: 113		column:25
token: 1		symID: 29		SY:number		line: 113		column:26
token: +		symID: 13		SY:plus		line: 113		column:28
token: 1		symID: 29		SY:number		line: 113		column:30
token: +		symID: 13		SY:plus		line: 113		column:32
token: 1		symID: 29		SY:number		line: 113		column:34
token: +		symID: 13		SY:plus		line: 113		column:36
token: 1		symID: 29		SY:number		line: 113		column:38
token: *		symID: 15		SY:mult		line: 113		column:40
token: 3		symID: 29		SY:number		line: 113		column:42
token: )		symID: 32		SY:right parent		line: 113		column:43
token: )		symID: 32		SY:right parent		line: 113		column:44
token: printf		symID: 11		SY:printf		line: 114		column:9
token: (		symID: 31		SY:left parent		line: 114		column:15
token: ifcondition clause error!		symID: 30		SY:string		line: 114		column:16
token: )		symID: 32		SY:right parent		line: 114		column:43
token: ;		symID: 24		SY:semi		line: 114		column:44
token: if		symID: 9		SY:if		line: 115		column:5
token: (		symID: 31		SY:left parent		line: 115		column:8
token: rightnumber		symID: 37		SY:identifier		line: 115		column:9
token: !=		symID: 22		SY:not equal		line: 115		column:21
token: rightnumber		symID: 37		SY:identifier		line: 115		column:24
token: )		symID: 32		SY:right parent		line: 115		column:35
token: printf		symID: 11		SY:printf		line: 116		column:9
token: (		symID: 31		SY:left parent		line: 116		column:15
token: ifcondition clause error		symID: 30		SY:string		line: 116		column:16
token: )		symID: 32		SY:right parent		line: 116		column:42
token: ;		symID: 24		SY:semi		line: 116		column:43
token: }		symID: 36		SY:right brace		line: 117		column:1
token: int		symID: 1		SY:int		line: 120		column:1
token: switchcodintionans		symID: 37		SY:identifier		line: 120		column:5
token: (		symID: 31		SY:left parent		line: 120		column:23
token: int		symID: 1		SY:int		line: 120		column:24
token: x		symID: 37		SY:identifier		line: 120		column:28
token: )		symID: 32		SY:right parent		line: 120		column:29
token: {		symID: 35		SY:left brace		line: 120		column:30
token: printf		symID: 11		SY:printf		line: 121		column:1
token: (		symID: 31		SY:left parent		line: 121		column:7
token:  switch(int x) 		symID: 30		SY:string		line: 121		column:8
token: )		symID: 32		SY:right parent		line: 121		column:25
token: ;		symID: 24		SY:semi		line: 121		column:26
token: switch		symID: 7		SY:switch		line: 122		column:5
token: (		symID: 31		SY:left parent		line: 122		column:12
token: x		symID: 37		SY:identifier		line: 122		column:13
token: )		symID: 32		SY:right parent		line: 122		column:14
token: {		symID: 35		SY:left brace		line: 122		column:16
token: case		symID: 8		SY:case		line: 123		column:9
token: 1		symID: 29		SY:number		line: 123		column:14
token: :		symID: 28		SY:colon		line: 123		column:16
token: return		symID: 12		SY:return		line: 123		column:18
token: (		symID: 31		SY:left parent		line: 123		column:25
token: 2		symID: 29		SY:number		line: 123		column:26
token: )		symID: 32		SY:right parent		line: 123		column:27
token: ;		symID: 24		SY:semi		line: 123		column:28
token: case		symID: 8		SY:case		line: 124		column:9
token: 2		symID: 29		SY:number		line: 124		column:14
token: :		symID: 28		SY:colon		line: 124		column:16
token: return		symID: 12		SY:return		line: 124		column:18
token: (		symID: 31		SY:left parent		line: 124		column:25
token: 3		symID: 29		SY:number		line: 124		column:26
token: )		symID: 32		SY:right parent		line: 124		column:27
token: ;		symID: 24		SY:semi		line: 124		column:28
token: case		symID: 8		SY:case		line: 125		column:9
token: 3		symID: 29		SY:number		line: 125		column:14
token: :		symID: 28		SY:colon		line: 125		column:16
token: return		symID: 12		SY:return		line: 125		column:18
token: (		symID: 31		SY:left parent		line: 125		column:25
token: 4		symID: 29		SY:number		line: 125		column:26
token: )		symID: 32		SY:right parent		line: 125		column:27
token: ;		symID: 24		SY:semi		line: 125		column:28
token: }		symID: 36		SY:right brace		line: 126		column:5
token: return		symID: 12		SY:return		line: 127		column:5
token: (		symID: 31		SY:left parent		line: 127		column:12
token: 5		symID: 29		SY:number		line: 127		column:13
token: )		symID: 32		SY:right parent		line: 127		column:14
token: ;		symID: 24		SY:semi		line: 127		column:15
token: }		symID: 36		SY:right brace		line: 128		column:1
token: int		symID: 1		SY:int		line: 131		column:1
token: switchcodintion		symID: 37		SY:identifier		line: 131		column:5
token: (		symID: 31		SY:left parent		line: 131		column:20
token: )		symID: 32		SY:right parent		line: 131		column:21
token: {		symID: 35		SY:left brace		line: 131		column:22
token: int		symID: 1		SY:int		line: 132		column:5
token: i		symID: 37		SY:identifier		line: 132		column:9
token: ,		symID: 23		SY:comma		line: 132		column:10
token: rightnumber		symID: 37		SY:identifier		line: 132		column:12
token: ;		symID: 24		SY:semi		line: 132		column:23
token: printf		symID: 11		SY:printf		line: 133		column:1
token: (		symID: 31		SY:left parent		line: 133		column:7
token:  switch 		symID: 30		SY:string		line: 133		column:8
token: )		symID: 32		SY:right parent		line: 133		column:18
token: ;		symID: 24		SY:semi		line: 133		column:19
token: i		symID: 37		SY:identifier		line: 134		column:5
token: =		symID: 25		SY:assign		line: 134		column:7
token: 1		symID: 29		SY:number		line: 134		column:9
token: ;		symID: 24		SY:semi		line: 134		column:10
token: rightnumber		symID: 37		SY:identifier		line: 135		column:5
token: =		symID: 25		SY:assign		line: 135		column:17
token: 0		symID: 29		SY:number		line: 135		column:19
token: ;		symID: 24		SY:semi		line: 135		column:20
token: do		symID: 5		SY:do		line: 136		column:5
token: {		symID: 35		SY:left brace		line: 136		column:8
token: if		symID: 9		SY:if		line: 137		column:9
token: (		symID: 31		SY:left parent		line: 137		column:12
token: i		symID: 37		SY:identifier		line: 137		column:14
token: +		symID: 13		SY:plus		line: 137		column:16
token: 1		symID: 29		SY:number		line: 137		column:18
token: ==		symID: 21		SY:equal		line: 137		column:20
token: switchcodintionans		symID: 37		SY:identifier		line: 137		column:23
token: (		symID: 31		SY:left parent		line: 137		column:41
token: i		symID: 37		SY:identifier		line: 137		column:42
token: )		symID: 32		SY:right parent		line: 137		column:43
token: )		symID: 32		SY:right parent		line: 137		column:44
token: rightnumber		symID: 37		SY:identifier		line: 138		column:13
token: =		symID: 25		SY:assign		line: 138		column:25
token: rightnumber		symID: 37		SY:identifier		line: 138		column:27
token: +		symID: 13		SY:plus		line: 138		column:39
token: 1		symID: 29		SY:number		line: 138		column:41
token: ;		symID: 24		SY:semi		line: 138		column:42
token: i		symID: 37		SY:identifier		line: 139		column:9
token: =		symID: 25		SY:assign		line: 139		column:11
token: i		symID: 37		SY:identifier		line: 139		column:13
token: +		symID: 13		SY:plus		line: 139		column:15
token: 1		symID: 29		SY:number		line: 139		column:17
token: ;		symID: 24		SY:semi		line: 139		column:18
token: }		symID: 36		SY:right brace		line: 140		column:5
token: while		symID: 6		SY:while		line: 140		column:6
token: (		symID: 31		SY:left parent		line: 140		column:12
token: i		symID: 37		SY:identifier		line: 140		column:13
token: <		symID: 18		SY:less		line: 140		column:15
token: 5		symID: 29		SY:number		line: 140		column:17
token: )		symID: 32		SY:right parent		line: 140		column:18
token: ;		symID: 24		SY:semi		line: 140		column:19
token: if		symID: 9		SY:if		line: 141		column:5
token: (		symID: 31		SY:left parent		line: 141		column:8
token: rightnumber		symID: 37		SY:identifier		line: 141		column:9
token: !=		symID: 22		SY:not equal		line: 141		column:21
token: 4		symID: 29		SY:number		line: 141		column:24
token: )		symID: 32		SY:right parent		line: 141		column:25
token: printf		symID: 11		SY:printf		line: 142		column:9
token: (		symID: 31		SY:left parent		line: 142		column:15
token: switchcodintion clause  error!		symID: 30		SY:string		line: 142		column:16
token: )		symID: 32		SY:right parent		line: 142		column:48
token: ;		symID: 24		SY:semi		line: 142		column:49
token: if		symID: 9		SY:if		line: 143		column:5
token: (		symID: 31		SY:left parent		line: 143		column:8
token: rightnumber		symID: 37		SY:identifier		line: 143		column:9
token: )		symID: 32		SY:right parent		line: 143		column:20
token: return		symID: 12		SY:return		line: 144		column:9
token: (		symID: 31		SY:left parent		line: 144		column:16
token: i		symID: 37		SY:identifier		line: 144		column:17
token: )		symID: 32		SY:right parent		line: 144		column:18
token: ;		symID: 24		SY:semi		line: 144		column:19
token: printf		symID: 11		SY:printf		line: 145		column:5
token: (		symID: 31		SY:left parent		line: 145		column:11
token: switchcodintion clause  error!		symID: 30		SY:string		line: 145		column:12
token: )		symID: 32		SY:right parent		line: 145		column:44
token: ;		symID: 24		SY:semi		line: 145		column:45
token: }		symID: 36		SY:right brace		line: 146		column:1
token: void		symID: 3		SY:void		line: 148		column:1
token: condition		symID: 37		SY:identifier		line: 148		column:6
token: (		symID: 31		SY:left parent		line: 148		column:15
token: )		symID: 32		SY:right parent		line: 148		column:16
token: {		symID: 35		SY:left brace		line: 148		column:17
token: const		symID: 0		SY:const		line: 149		column:5
token: int		symID: 1		SY:int		line: 149		column:11
token: intermax		symID: 37		SY:identifier		line: 149		column:15
token: =		symID: 25		SY:assign		line: 149		column:24
token: 5		symID: 29		SY:number		line: 149		column:26
token: ;		symID: 24		SY:semi		line: 149		column:27
token: int		symID: 1		SY:int		line: 150		column:5
token: iter		symID: 37		SY:identifier		line: 150		column:9
token: ;		symID: 24		SY:semi		line: 150		column:13
token: iter		symID: 37		SY:identifier		line: 151		column:5
token: =		symID: 25		SY:assign		line: 151		column:10
token: 0		symID: 29		SY:number		line: 151		column:12
token: ;		symID: 24		SY:semi		line: 151		column:13
token: printf		symID: 11		SY:printf		line: 152		column:1
token: (		symID: 31		SY:left parent		line: 152		column:7
token:  condition 		symID: 30		SY:string		line: 152		column:8
token: )		symID: 32		SY:right parent		line: 152		column:21
token: ;		symID: 24		SY:semi		line: 152		column:22
token: do		symID: 5		SY:do		line: 153		column:5
token: {		symID: 35		SY:left brace		line: 153		column:8
token: switch		symID: 7		SY:switch		line: 154		column:9
token: (		symID: 31		SY:left parent		line: 154		column:16
token: iter		symID: 37		SY:identifier		line: 154		column:17
token: )		symID: 32		SY:right parent		line: 154		column:21
token: {		symID: 35		SY:left brace		line: 154		column:22
token: case		symID: 8		SY:case		line: 155		column:13
token: 0		symID: 29		SY:number		line: 155		column:18
token: :		symID: 28		SY:colon		line: 155		column:19
token: if		symID: 9		SY:if		line: 155		column:21
token: (		symID: 31		SY:left parent		line: 155		column:24
token: iter		symID: 37		SY:identifier		line: 155		column:25
token: !=		symID: 22		SY:not equal		line: 155		column:30
token: 0		symID: 29		SY:number		line: 155		column:33
token: )		symID: 32		SY:right parent		line: 155		column:34
token: printf		symID: 11		SY:printf		line: 155		column:36
token: (		symID: 31		SY:left parent		line: 155		column:42
token: error 0		symID: 30		SY:string		line: 155		column:43
token: )		symID: 32		SY:right parent		line: 155		column:52
token: ;		symID: 24		SY:semi		line: 155		column:53
token: case		symID: 8		SY:case		line: 156		column:13
token: 1		symID: 29		SY:number		line: 156		column:18
token: :		symID: 28		SY:colon		line: 156		column:19
token: if		symID: 9		SY:if		line: 156		column:21
token: (		symID: 31		SY:left parent		line: 156		column:24
token: iter		symID: 37		SY:identifier		line: 156		column:25
token: !=		symID: 22		SY:not equal		line: 156		column:30
token: 1		symID: 29		SY:number		line: 156		column:33
token: )		symID: 32		SY:right parent		line: 156		column:34
token: printf		symID: 11		SY:printf		line: 156		column:36
token: (		symID: 31		SY:left parent		line: 156		column:42
token: error 1		symID: 30		SY:string		line: 156		column:43
token: )		symID: 32		SY:right parent		line: 156		column:52
token: ;		symID: 24		SY:semi		line: 156		column:53
token: case		symID: 8		SY:case		line: 157		column:13
token: 2		symID: 29		SY:number		line: 157		column:18
token: :		symID: 28		SY:colon		line: 157		column:19
token: if		symID: 9		SY:if		line: 157		column:21
token: (		symID: 31		SY:left parent		line: 157		column:24
token: iter		symID: 37		SY:identifier		line: 157		column:25
token: !=		symID: 22		SY:not equal		line: 157		column:30
token: 2		symID: 29		SY:number		line: 157		column:33
token: )		symID: 32		SY:right parent		line: 157		column:34
token: printf		symID: 11		SY:printf		line: 157		column:36
token: (		symID: 31		SY:left parent		line: 157		column:42
token: error 2		symID: 30		SY:string		line: 157		column:43
token: )		symID: 32		SY:right parent		line: 157		column:52
token: ;		symID: 24		SY:semi		line: 157		column:53
token: }		symID: 36		SY:right brace		line: 158		column:9
token: iter		symID: 37		SY:identifier		line: 159		column:9
token: =		symID: 25		SY:assign		line: 159		column:14
token: iter		symID: 37		SY:identifier		line: 159		column:16
token: +		symID: 13		SY:plus		line: 159		column:21
token: 1		symID: 29		SY:number		line: 159		column:23
token: ;		symID: 24		SY:semi		line: 159		column:24
token: }		symID: 36		SY:right brace		line: 160		column:5
token: while		symID: 6		SY:while		line: 160		column:6
token: (		symID: 31		SY:left parent		line: 160		column:12
token: iter		symID: 37		SY:identifier		line: 160		column:13
token: <		symID: 18		SY:less		line: 160		column:18
token: intermax		symID: 37		SY:identifier		line: 160		column:20
token: )		symID: 32		SY:right parent		line: 160		column:28
token: ;		symID: 24		SY:semi		line: 160		column:29
token: }		symID: 36		SY:right brace		line: 161		column:1
token: void		symID: 3		SY:void		line: 163		column:1
token: condition_test		symID: 37		SY:identifier		line: 163		column:6
token: (		symID: 31		SY:left parent		line: 163		column:20
token: )		symID: 32		SY:right parent		line: 163		column:21
token: {		symID: 35		SY:left brace		line: 163		column:22
token: printf		symID: 11		SY:printf		line: 164		column:1
token: (		symID: 31		SY:left parent		line: 164		column:7
token:  condition_test 		symID: 30		SY:string		line: 164		column:8
token: )		symID: 32		SY:right parent		line: 164		column:26
token: ;		symID: 24		SY:semi		line: 164		column:27
token: ifcondition		symID: 37		SY:identifier		line: 165		column:5
token: (		symID: 31		SY:left parent		line: 165		column:16
token: )		symID: 32		SY:right parent		line: 165		column:17
token: ;		symID: 24		SY:semi		line: 165		column:18
token: switchcodintion		symID: 37		SY:identifier		line: 166		column:5
token: (		symID: 31		SY:left parent		line: 166		column:20
token: )		symID: 32		SY:right parent		line: 166		column:21
token: ;		symID: 24		SY:semi		line: 166		column:22
token: condition		symID: 37		SY:identifier		line: 167		column:5
token: (		symID: 31		SY:left parent		line: 167		column:14
token: )		symID: 32		SY:right parent		line: 167		column:15
token: ;		symID: 24		SY:semi		line: 167		column:16
token: printf		symID: 11		SY:printf		line: 168		column:5
token: (		symID: 31		SY:left parent		line: 168		column:11
token: condition test passed		symID: 30		SY:string		line: 168		column:12
token: )		symID: 32		SY:right parent		line: 168		column:35
token: ;		symID: 24		SY:semi		line: 168		column:36
token: }		symID: 36		SY:right brace		line: 169		column:1
token: void		symID: 3		SY:void		line: 172		column:1
token: miscellaneous		symID: 37		SY:identifier		line: 172		column:6
token: (		symID: 31		SY:left parent		line: 172		column:19
token: )		symID: 32		SY:right parent		line: 172		column:20
token: {		symID: 35		SY:left brace		line: 172		column:21
token: int		symID: 1		SY:int		line: 173		column:5
token: _		symID: 37		SY:identifier		line: 173		column:9
token: ,		symID: 23		SY:comma		line: 173		column:10
token: a		symID: 37		SY:identifier		line: 173		column:12
token: ,		symID: 23		SY:comma		line: 173		column:13
token: array		symID: 37		SY:identifier		line: 173		column:15
token: [		symID: 33		SY:left brack		line: 173		column:20
token: 23		symID: 29		SY:number		line: 173		column:21
token: ]		symID: 34		SY:right brack		line: 173		column:23
token: ,		symID: 23		SY:comma		line: 173		column:24
token: i		symID: 37		SY:identifier		line: 173		column:26
token: ,		symID: 23		SY:comma		line: 173		column:27
token: endid		symID: 37		SY:identifier		line: 173		column:29
token: ;		symID: 24		SY:semi		line: 173		column:34
token: char		symID: 2		SY:char		line: 174		column:5
token: ch1		symID: 37		SY:identifier		line: 174		column:10
token: ,		symID: 23		SY:comma		line: 174		column:13
token: buf		symID: 37		SY:identifier		line: 174		column:15
token: [		symID: 33		SY:left brack		line: 174		column:18
token: 256		symID: 29		SY:number		line: 174		column:19
token: ]		symID: 34		SY:right brack		line: 174		column:22
token: ;		symID: 24		SY:semi		line: 174		column:23
token: _		symID: 37		SY:identifier		line: 175		column:5
token: =		symID: 25		SY:assign		line: 175		column:7
token: 1		symID: 29		SY:number		line: 175		column:9
token: ;		symID: 24		SY:semi		line: 175		column:10
token: a		symID: 37		SY:identifier		line: 175		column:12
token: =		symID: 25		SY:assign		line: 175		column:14
token: 2		symID: 29		SY:number		line: 175		column:16
token: ;		symID: 24		SY:semi		line: 175		column:17
token: i		symID: 37		SY:identifier		line: 175		column:19
token: =		symID: 25		SY:assign		line: 175		column:20
token: 0		symID: 29		SY:number		line: 175		column:22
token: ;		symID: 24		SY:semi		line: 175		column:23
token: printf		symID: 11		SY:printf		line: 176		column:1
token: (		symID: 31		SY:left parent		line: 176		column:7
token:  miscella 		symID: 30		SY:string		line: 176		column:8
token: )		symID: 32		SY:right parent		line: 176		column:20
token: ;		symID: 24		SY:semi		line: 176		column:21
token: do		symID: 5		SY:do		line: 177		column:5
token: {		symID: 35		SY:left brace		line: 177		column:8
token: array		symID: 37		SY:identifier		line: 178		column:9
token: [		symID: 33		SY:left brack		line: 178		column:14
token: i		symID: 37		SY:identifier		line: 178		column:15
token: ]		symID: 34		SY:right brack		line: 178		column:16
token: =		symID: 25		SY:assign		line: 178		column:18
token: i		symID: 37		SY:identifier		line: 178		column:20
token: ;		symID: 24		SY:semi		line: 178		column:21
token: i		symID: 37		SY:identifier		line: 179		column:9
token: =		symID: 25		SY:assign		line: 179		column:11
token: i		symID: 37		SY:identifier		line: 179		column:13
token: +		symID: 13		SY:plus		line: 179		column:15
token: 1		symID: 29		SY:number		line: 179		column:17
token: ;		symID: 24		SY:semi		line: 179		column:18
token: }		symID: 36		SY:right brace		line: 180		column:5
token: while		symID: 6		SY:while		line: 180		column:6
token: (		symID: 31		SY:left parent		line: 180		column:12
token: i		symID: 37		SY:identifier		line: 180		column:13
token: <		symID: 18		SY:less		line: 180		column:15
token: 23		symID: 29		SY:number		line: 180		column:17
token: )		symID: 32		SY:right parent		line: 180		column:19
token: ;		symID: 24		SY:semi		line: 180		column:20
token: ch1		symID: 37		SY:identifier		line: 181		column:5
token: =		symID: 25		SY:assign		line: 181		column:9
token: a		symID: 26		SY:single quota		line: 181		column:11
token: ;		symID: 24		SY:semi		line: 181		column:14
token: i		symID: 37		SY:identifier		line: 182		column:5
token: =		symID: 25		SY:assign		line: 182		column:7
token: 127		symID: 29		SY:number		line: 182		column:9
token: ;		symID: 24		SY:semi		line: 182		column:12
token: endid		symID: 37		SY:identifier		line: 183		column:5
token: =		symID: 25		SY:assign		line: 183		column:11
token: i		symID: 37		SY:identifier		line: 183		column:13
token: ;		symID: 24		SY:semi		line: 183		column:14
token: _		symID: 37		SY:identifier		line: 184		column:5
token: =		symID: 25		SY:assign		line: 184		column:7
token: 0		symID: 29		SY:number		line: 184		column:9
token: ;		symID: 24		SY:semi		line: 184		column:10
token: do		symID: 5		SY:do		line: 186		column:5
token: {		symID: 35		SY:left brace		line: 186		column:8
token: buf		symID: 37		SY:identifier		line: 187		column:9
token: [		symID: 33		SY:left brack		line: 187		column:12
token: (		symID: 31		SY:left parent		line: 187		column:14
token: _		symID: 37		SY:identifier		line: 187		column:15
token: *		symID: 15		SY:mult		line: 187		column:17
token: 1		symID: 29		SY:number		line: 187		column:19
token: -		symID: 14		SY:sub		line: 187		column:21
token: _		symID: 37		SY:identifier		line: 187		column:23
token: -		symID: 14		SY:sub		line: 187		column:25
token: 1		symID: 29		SY:number		line: 187		column:27
token: +		symID: 13		SY:plus		line: 187		column:29
token: 2		symID: 29		SY:number		line: 187		column:31
token: /		symID: 16		SY:div		line: 187		column:33
token: 1		symID: 29		SY:number		line: 187		column:35
token: -		symID: 14		SY:sub		line: 187		column:37
token: 1		symID: 29		SY:number		line: 187		column:39
token: )		symID: 32		SY:right parent		line: 187		column:40
token: /		symID: 16		SY:div		line: 187		column:42
token: 2		symID: 29		SY:number		line: 187		column:44
token: ]		symID: 34		SY:right brack		line: 187		column:45
token: =		symID: 25		SY:assign		line: 187		column:47
token: a		symID: 26		SY:single quota		line: 187		column:50
token: ;		symID: 24		SY:semi		line: 187		column:53
token: _		symID: 37		SY:identifier		line: 188		column:9
token: =		symID: 25		SY:assign		line: 188		column:11
token: _		symID: 37		SY:identifier		line: 188		column:13
token: +		symID: 13		SY:plus		line: 188		column:15
token: 1		symID: 29		SY:number		line: 188		column:17
token: ;		symID: 24		SY:semi		line: 188		column:18
token: }		symID: 36		SY:right brace		line: 189		column:5
token: while		symID: 6		SY:while		line: 189		column:6
token: (		symID: 31		SY:left parent		line: 189		column:12
token: _		symID: 37		SY:identifier		line: 189		column:13
token: <		symID: 18		SY:less		line: 189		column:15
token: endid		symID: 37		SY:identifier		line: 189		column:17
token: )		symID: 32		SY:right parent		line: 189		column:22
token: ;		symID: 24		SY:semi		line: 189		column:23
token: ;		symID: 24		SY:semi		line: 191		column:5
token: ;		symID: 24		SY:semi		line: 191		column:6
token: ;		symID: 24		SY:semi		line: 191		column:7
token: ;		symID: 24		SY:semi		line: 191		column:8
token: ;		symID: 24		SY:semi		line: 191		column:9
token: ;		symID: 24		SY:semi		line: 191		column:10
token: ;		symID: 24		SY:semi		line: 191		column:11
token: ;		symID: 24		SY:semi		line: 191		column:12
token: ;		symID: 24		SY:semi		line: 191		column:13
token: {		symID: 35		SY:left brace		line: 191		column:14
token: }		symID: 36		SY:right brace		line: 191		column:15
token: {		symID: 35		SY:left brace		line: 191		column:16
token: }		symID: 36		SY:right brace		line: 191		column:17
token: ;		symID: 24		SY:semi		line: 191		column:18
token: ;		symID: 24		SY:semi		line: 191		column:19
token: ;		symID: 24		SY:semi		line: 191		column:20
token: ;		symID: 24		SY:semi		line: 191		column:21
token: ;		symID: 24		SY:semi		line: 191		column:22
token: {		symID: 35		SY:left brace		line: 191		column:23
token: }		symID: 36		SY:right brace		line: 191		column:24
token: {		symID: 35		SY:left brace		line: 191		column:25
token: }		symID: 36		SY:right brace		line: 191		column:26
token: {		symID: 35		SY:left brace		line: 191		column:27
token: ;		symID: 24		SY:semi		line: 191		column:28
token: ;		symID: 24		SY:semi		line: 191		column:29
token: ;		symID: 24		SY:semi		line: 191		column:30
token: ;		symID: 24		SY:semi		line: 191		column:31
token: ;		symID: 24		SY:semi		line: 191		column:32
token: ;		symID: 24		SY:semi		line: 191		column:33
token: }		symID: 36		SY:right brace		line: 191		column:34
token: ;		symID: 24		SY:semi		line: 191		column:35
token: ;		symID: 24		SY:semi		line: 191		column:36
token: ;		symID: 24		SY:semi		line: 191		column:37
token: if		symID: 9		SY:if		line: 192		column:5
token: (		symID: 31		SY:left parent		line: 192		column:8
token: buf		symID: 37		SY:identifier		line: 192		column:9
token: [		symID: 33		SY:left brack		line: 192		column:12
token: 0		symID: 29		SY:number		line: 192		column:13
token: ]		symID: 34		SY:right brack		line: 192		column:14
token: ==		symID: 21		SY:equal		line: 192		column:16
token: a		symID: 26		SY:single quota		line: 192		column:19
token: )		symID: 32		SY:right parent		line: 192		column:22
token: printf		symID: 11		SY:printf		line: 193		column:5
token: (		symID: 31		SY:left parent		line: 193		column:11
token: miscellaneous test passed		symID: 30		SY:string		line: 193		column:12
token: )		symID: 32		SY:right parent		line: 193		column:39
token: ;		symID: 24		SY:semi		line: 193		column:40
token: }		symID: 36		SY:right brace		line: 194		column:1
token: void		symID: 3		SY:void		line: 195		column:1
token: miscellaneous_test		symID: 37		SY:identifier		line: 195		column:6
token: (		symID: 31		SY:left parent		line: 195		column:24
token: )		symID: 32		SY:right parent		line: 195		column:25
token: {		symID: 35		SY:left brace		line: 195		column:26
token: printf		symID: 11		SY:printf		line: 196		column:1
token: (		symID: 31		SY:left parent		line: 196		column:7
token:  miscella_test 		symID: 30		SY:string		line: 196		column:8
token: )		symID: 32		SY:right parent		line: 196		column:25
token: ;		symID: 24		SY:semi		line: 196		column:26
token: miscellaneous		symID: 37		SY:identifier		line: 197		column:5
token: (		symID: 31		SY:left parent		line: 197		column:18
token: )		symID: 32		SY:right parent		line: 197		column:19
token: ;		symID: 24		SY:semi		line: 197		column:20
token: }		symID: 36		SY:right brace		line: 198		column:1
token: int		symID: 1		SY:int		line: 201		column:1
token: fibonaci		symID: 37		SY:identifier		line: 201		column:5
token: (		symID: 31		SY:left parent		line: 201		column:13
token: int		symID: 1		SY:int		line: 201		column:14
token: n		symID: 37		SY:identifier		line: 201		column:18
token: )		symID: 32		SY:right parent		line: 201		column:19
token: {		symID: 35		SY:left brace		line: 201		column:20
token: printf		symID: 11		SY:printf		line: 202		column:1
token: (		symID: 31		SY:left parent		line: 202		column:7
token:  fibonaci 		symID: 30		SY:string		line: 202		column:8
token: )		symID: 32		SY:right parent		line: 202		column:20
token: ;		symID: 24		SY:semi		line: 202		column:21
token: switch		symID: 7		SY:switch		line: 203		column:5
token: (		symID: 31		SY:left parent		line: 203		column:12
token: n		symID: 37		SY:identifier		line: 203		column:13
token: )		symID: 32		SY:right parent		line: 203		column:14
token: {		symID: 35		SY:left brace		line: 203		column:15
token: case		symID: 8		SY:case		line: 204		column:9
token: 0		symID: 29		SY:number		line: 204		column:14
token: :		symID: 28		SY:colon		line: 204		column:15
token: return		symID: 12		SY:return		line: 204		column:17
token: (		symID: 31		SY:left parent		line: 204		column:24
token: 0		symID: 29		SY:number		line: 204		column:25
token: )		symID: 32		SY:right parent		line: 204		column:26
token: ;		symID: 24		SY:semi		line: 204		column:27
token: case		symID: 8		SY:case		line: 205		column:9
token: 1		symID: 29		SY:number		line: 205		column:14
token: :		symID: 28		SY:colon		line: 205		column:15
token: return		symID: 12		SY:return		line: 205		column:17
token: (		symID: 31		SY:left parent		line: 205		column:24
token: 1		symID: 29		SY:number		line: 205		column:25
token: )		symID: 32		SY:right parent		line: 205		column:26
token: ;		symID: 24		SY:semi		line: 205		column:27
token: case		symID: 8		SY:case		line: 206		column:9
token: 2		symID: 29		SY:number		line: 206		column:14
token: :		symID: 28		SY:colon		line: 206		column:15
token: return		symID: 12		SY:return		line: 206		column:17
token: (		symID: 31		SY:left parent		line: 206		column:24
token: 1		symID: 29		SY:number		line: 206		column:25
token: )		symID: 32		SY:right parent		line: 206		column:26
token: ;		symID: 24		SY:semi		line: 206		column:27
token: }		symID: 36		SY:right brace		line: 207		column:5
token: return		symID: 12		SY:return		line: 208		column:5
token: (		symID: 31		SY:left parent		line: 208		column:12
token: fibonaci		symID: 37		SY:identifier		line: 208		column:13
token: (		symID: 31		SY:left parent		line: 208		column:21
token: n		symID: 37		SY:identifier		line: 208		column:22
token: -		symID: 14		SY:sub		line: 208		column:24
token: 1		symID: 29		SY:number		line: 208		column:26
token: )		symID: 32		SY:right parent		line: 208		column:27
token: +		symID: 13		SY:plus		line: 208		column:29
token: fibonaci		symID: 37		SY:identifier		line: 208		column:31
token: (		symID: 31		SY:left parent		line: 208		column:39
token: n		symID: 37		SY:identifier		line: 208		column:40
token: -		symID: 14		SY:sub		line: 208		column:42
token: 2		symID: 29		SY:number		line: 208		column:44
token: )		symID: 32		SY:right parent		line: 208		column:45
token: )		symID: 32		SY:right parent		line: 208		column:46
token: ;		symID: 24		SY:semi		line: 208		column:47
token: }		symID: 36		SY:right brace		line: 209		column:1
token: void		symID: 3		SY:void		line: 211		column:1
token: fibonaci_test		symID: 37		SY:identifier		line: 211		column:6
token: (		symID: 31		SY:left parent		line: 211		column:19
token: )		symID: 32		SY:right parent		line: 211		column:20
token: {		symID: 35		SY:left brace		line: 211		column:21
token: int		symID: 1		SY:int		line: 212		column:5
token: n		symID: 37		SY:identifier		line: 212		column:9
token: ;		symID: 24		SY:semi		line: 212		column:10
token: printf		symID: 11		SY:printf		line: 213		column:1
token: (		symID: 31		SY:left parent		line: 213		column:7
token:  fibonaci_test 		symID: 30		SY:string		line: 213		column:8
token: )		symID: 32		SY:right parent		line: 213		column:25
token: ;		symID: 24		SY:semi		line: 213		column:26
token: printf		symID: 11		SY:printf		line: 214		column:5
token: (		symID: 31		SY:left parent		line: 214		column:11
token: Fibonaci: Please input a unsigned positive integer ?		symID: 30		SY:string		line: 214		column:12
token: )		symID: 32		SY:right parent		line: 214		column:66
token: ;		symID: 24		SY:semi		line: 214		column:67
token: scanf		symID: 10		SY:scanf		line: 215		column:5
token: (		symID: 31		SY:left parent		line: 215		column:10
token: n		symID: 37		SY:identifier		line: 215		column:11
token: )		symID: 32		SY:right parent		line: 215		column:12
token: ;		symID: 24		SY:semi		line: 215		column:13
token: do		symID: 5		SY:do		line: 216		column:5
token: {		symID: 35		SY:left brace		line: 216		column:7
token: if		symID: 9		SY:if		line: 217		column:9
token: (		symID: 31		SY:left parent		line: 217		column:12
token: n		symID: 37		SY:identifier		line: 217		column:13
token: <		symID: 18		SY:less		line: 217		column:15
token: 0		symID: 29		SY:number		line: 217		column:17
token: )		symID: 32		SY:right parent		line: 217		column:18
token: {		symID: 35		SY:left brace		line: 217		column:19
token: printf		symID: 11		SY:printf		line: 218		column:13
token: (		symID: 31		SY:left parent		line: 218		column:19
token: Input error, try again:		symID: 30		SY:string		line: 218		column:20
token: )		symID: 32		SY:right parent		line: 218		column:45
token: ;		symID: 24		SY:semi		line: 218		column:46
token: scanf		symID: 10		SY:scanf		line: 219		column:13
token: (		symID: 31		SY:left parent		line: 219		column:18
token: n		symID: 37		SY:identifier		line: 219		column:19
token: )		symID: 32		SY:right parent		line: 219		column:20
token: ;		symID: 24		SY:semi		line: 219		column:21
token: }		symID: 36		SY:right brace		line: 220		column:9
token: if		symID: 9		SY:if		line: 221		column:9
token: (		symID: 31		SY:left parent		line: 221		column:12
token: n		symID: 37		SY:identifier		line: 221		column:13
token: >=		symID: 19		SY:great or equal		line: 221		column:15
token: 0		symID: 29		SY:number		line: 221		column:18
token: )		symID: 32		SY:right parent		line: 221		column:19
token: {		symID: 35		SY:left brace		line: 221		column:20
token: printf		symID: 11		SY:printf		line: 222		column:13
token: (		symID: 31		SY:left parent		line: 222		column:19
token: The fibonaci's answer is 		symID: 30		SY:string		line: 222		column:20
token: ,		symID: 23		SY:comma		line: 222		column:47
token: fibonaci		symID: 37		SY:identifier		line: 222		column:49
token: (		symID: 31		SY:left parent		line: 222		column:57
token: n		symID: 37		SY:identifier		line: 222		column:58
token: )		symID: 32		SY:right parent		line: 222		column:59
token: )		symID: 32		SY:right parent		line: 222		column:60
token: ;		symID: 24		SY:semi		line: 222		column:61
token: }		symID: 36		SY:right brace		line: 223		column:9
token: }		symID: 36		SY:right brace		line: 224		column:5
token: while		symID: 6		SY:while		line: 225		column:5
token: (		symID: 31		SY:left parent		line: 225		column:10
token: n		symID: 37		SY:identifier		line: 225		column:11
token: <		symID: 18		SY:less		line: 225		column:13
token: 0		symID: 29		SY:number		line: 225		column:15
token: )		symID: 32		SY:right parent		line: 225		column:16
token: }		symID: 36		SY:right brace		line: 227		column:1
token: int		symID: 1		SY:int		line: 228		column:1
token: mod		symID: 37		SY:identifier		line: 228		column:5
token: (		symID: 31		SY:left parent		line: 228		column:8
token: int		symID: 1		SY:int		line: 228		column:9
token: n		symID: 37		SY:identifier		line: 228		column:13
token: ,		symID: 23		SY:comma		line: 228		column:14
token: int		symID: 1		SY:int		line: 228		column:16
token: m		symID: 37		SY:identifier		line: 228		column:20
token: )		symID: 32		SY:right parent		line: 228		column:21
token: {		symID: 35		SY:left brace		line: 228		column:22
token: printf		symID: 11		SY:printf		line: 229		column:1
token: (		symID: 31		SY:left parent		line: 229		column:7
token:  mod 		symID: 30		SY:string		line: 229		column:8
token: )		symID: 32		SY:right parent		line: 229		column:15
token: ;		symID: 24		SY:semi		line: 229		column:16
token: return		symID: 12		SY:return		line: 230		column:5
token: (		symID: 31		SY:left parent		line: 230		column:12
token: n		symID: 37		SY:identifier		line: 230		column:13
token: -		symID: 14		SY:sub		line: 230		column:15
token: n		symID: 37		SY:identifier		line: 230		column:17
token: /		symID: 16		SY:div		line: 230		column:19
token: m		symID: 37		SY:identifier		line: 230		column:21
token: *		symID: 15		SY:mult		line: 230		column:23
token: m		symID: 37		SY:identifier		line: 230		column:25
token: )		symID: 32		SY:right parent		line: 230		column:26
token: ;		symID: 24		SY:semi		line: 230		column:27
token: }		symID: 36		SY:right brace		line: 231		column:1
token: int		symID: 1		SY:int		line: 232		column:1
token: gcd		symID: 37		SY:identifier		line: 232		column:5
token: (		symID: 31		SY:left parent		line: 232		column:8
token: int		symID: 1		SY:int		line: 232		column:9
token: n		symID: 37		SY:identifier		line: 232		column:13
token: ,		symID: 23		SY:comma		line: 232		column:14
token: int		symID: 1		SY:int		line: 232		column:16
token: m		symID: 37		SY:identifier		line: 232		column:20
token: )		symID: 32		SY:right parent		line: 232		column:21
token: {		symID: 35		SY:left brace		line: 232		column:22
token: int		symID: 1		SY:int		line: 233		column:5
token: rem		symID: 37		SY:identifier		line: 233		column:9
token: ;		symID: 24		SY:semi		line: 233		column:12
token: printf		symID: 11		SY:printf		line: 234		column:1
token: (		symID: 31		SY:left parent		line: 234		column:7
token:  gcd 		symID: 30		SY:string		line: 234		column:8
token: )		symID: 32		SY:right parent		line: 234		column:15
token: ;		symID: 24		SY:semi		line: 234		column:16
token: rem		symID: 37		SY:identifier		line: 235		column:5
token: =		symID: 25		SY:assign		line: 235		column:9
token: 0		symID: 29		SY:number		line: 235		column:11
token: ;		symID: 24		SY:semi		line: 235		column:12
token: if		symID: 9		SY:if		line: 236		column:5
token: (		symID: 31		SY:left parent		line: 236		column:8
token: n		symID: 37		SY:identifier		line: 236		column:9
token: ==		symID: 21		SY:equal		line: 236		column:11
token: 0		symID: 29		SY:number		line: 236		column:14
token: )		symID: 32		SY:right parent		line: 236		column:15
token: return		symID: 12		SY:return		line: 237		column:9
token: (		symID: 31		SY:left parent		line: 237		column:16
token: m		symID: 37		SY:identifier		line: 237		column:17
token: )		symID: 32		SY:right parent		line: 237		column:18
token: ;		symID: 24		SY:semi		line: 237		column:19
token: if		symID: 9		SY:if		line: 238		column:5
token: (		symID: 31		SY:left parent		line: 238		column:8
token: m		symID: 37		SY:identifier		line: 238		column:9
token: ==		symID: 21		SY:equal		line: 238		column:11
token: 0		symID: 29		SY:number		line: 238		column:14
token: )		symID: 32		SY:right parent		line: 238		column:15
token: return		symID: 12		SY:return		line: 239		column:9
token: (		symID: 31		SY:left parent		line: 239		column:16
token: n		symID: 37		SY:identifier		line: 239		column:17
token: )		symID: 32		SY:right parent		line: 239		column:18
token: ;		symID: 24		SY:semi		line: 239		column:19
token: return		symID: 12		SY:return		line: 240		column:5
token: (		symID: 31		SY:left parent		line: 240		column:12
token: gcd		symID: 37		SY:identifier		line: 240		column:13
token: (		symID: 31		SY:left parent		line: 240		column:16
token: m		symID: 37		SY:identifier		line: 240		column:17
token: ,		symID: 23		SY:comma		line: 240		column:18
token: mod		symID: 37		SY:identifier		line: 240		column:20
token: (		symID: 31		SY:left parent		line: 240		column:23
token: n		symID: 37		SY:identifier		line: 240		column:24
token: ,		symID: 23		SY:comma		line: 240		column:25
token: m		symID: 37		SY:identifier		line: 240		column:27
token: )		symID: 32		SY:right parent		line: 240		column:28
token: )		symID: 32		SY:right parent		line: 240		column:29
token: )		symID: 32		SY:right parent		line: 240		column:30
token: ;		symID: 24		SY:semi		line: 240		column:31
token: }		symID: 36		SY:right brace		line: 241		column:1
token: int		symID: 1		SY:int		line: 243		column:1
token: iswronggcd		symID: 37		SY:identifier		line: 243		column:5
token: (		symID: 31		SY:left parent		line: 243		column:15
token: int		symID: 1		SY:int		line: 243		column:16
token: n		symID: 37		SY:identifier		line: 243		column:20
token: ,		symID: 23		SY:comma		line: 243		column:21
token: int		symID: 1		SY:int		line: 243		column:23
token: m		symID: 37		SY:identifier		line: 243		column:27
token: )		symID: 32		SY:right parent		line: 243		column:28
token: {		symID: 35		SY:left brace		line: 243		column:29
token: printf		symID: 11		SY:printf		line: 244		column:1
token: (		symID: 31		SY:left parent		line: 244		column:7
token:  wronggcd 		symID: 30		SY:string		line: 244		column:8
token: )		symID: 32		SY:right parent		line: 244		column:20
token: ;		symID: 24		SY:semi		line: 244		column:21
token: if		symID: 9		SY:if		line: 245		column:5
token: (		symID: 31		SY:left parent		line: 245		column:8
token: n		symID: 37		SY:identifier		line: 245		column:9
token: <=		symID: 20		SY:less or equal		line: 245		column:11
token: 0		symID: 29		SY:number		line: 245		column:14
token: )		symID: 32		SY:right parent		line: 245		column:15
token: return		symID: 12		SY:return		line: 246		column:9
token: (		symID: 31		SY:left parent		line: 246		column:16
token: 1		symID: 29		SY:number		line: 246		column:17
token: )		symID: 32		SY:right parent		line: 246		column:18
token: ;		symID: 24		SY:semi		line: 246		column:19
token: if		symID: 9		SY:if		line: 247		column:5
token: (		symID: 31		SY:left parent		line: 247		column:8
token: m		symID: 37		SY:identifier		line: 247		column:9
token: <=		symID: 20		SY:less or equal		line: 247		column:11
token: 0		symID: 29		SY:number		line: 247		column:14
token: )		symID: 32		SY:right parent		line: 247		column:15
token: return		symID: 12		SY:return		line: 248		column:9
token: (		symID: 31		SY:left parent		line: 248		column:16
token: 1		symID: 29		SY:number		line: 248		column:17
token: )		symID: 32		SY:right parent		line: 248		column:18
token: ;		symID: 24		SY:semi		line: 248		column:19
token: return		symID: 12		SY:return		line: 249		column:5
token: (		symID: 31		SY:left parent		line: 249		column:12
token: 0		symID: 29		SY:number		line: 249		column:13
token: )		symID: 32		SY:right parent		line: 249		column:14
token: ;		symID: 24		SY:semi		line: 249		column:15
token: }		symID: 36		SY:right brace		line: 250		column:1
token: void		symID: 3		SY:void		line: 251		column:1
token: gcd_test		symID: 37		SY:identifier		line: 251		column:6
token: (		symID: 31		SY:left parent		line: 251		column:14
token: )		symID: 32		SY:right parent		line: 251		column:15
token: {		symID: 35		SY:left brace		line: 251		column:16
token: int		symID: 1		SY:int		line: 252		column:5
token: n		symID: 37		SY:identifier		line: 252		column:9
token: ,		symID: 23		SY:comma		line: 252		column:10
token: m		symID: 37		SY:identifier		line: 252		column:12
token: ;		symID: 24		SY:semi		line: 252		column:13
token: printf		symID: 11		SY:printf		line: 253		column:5
token: (		symID: 31		SY:left parent		line: 253		column:11
token:  gcd_test 		symID: 30		SY:string		line: 253		column:12
token: )		symID: 32		SY:right parent		line: 253		column:24
token: ;		symID: 24		SY:semi		line: 253		column:25
token: printf		symID: 11		SY:printf		line: 254		column:5
token: (		symID: 31		SY:left parent		line: 254		column:11
token: GCD: Please input two unsigned positive integer ?		symID: 30		SY:string		line: 254		column:12
token: )		symID: 32		SY:right parent		line: 254		column:63
token: ;		symID: 24		SY:semi		line: 254		column:64
token: scanf		symID: 10		SY:scanf		line: 255		column:5
token: (		symID: 31		SY:left parent		line: 255		column:10
token: n		symID: 37		SY:identifier		line: 255		column:11
token: ,		symID: 23		SY:comma		line: 255		column:12
token: m		symID: 37		SY:identifier		line: 255		column:14
token: )		symID: 32		SY:right parent		line: 255		column:15
token: ;		symID: 24		SY:semi		line: 255		column:16
token: if		symID: 9		SY:if		line: 256		column:5
token: (		symID: 31		SY:left parent		line: 256		column:8
token: iswronggcd		symID: 37		SY:identifier		line: 256		column:9
token: (		symID: 31		SY:left parent		line: 256		column:19
token: n		symID: 37		SY:identifier		line: 256		column:20
token: ,		symID: 23		SY:comma		line: 256		column:21
token: m		symID: 37		SY:identifier		line: 256		column:23
token: )		symID: 32		SY:right parent		line: 256		column:24
token: )		symID: 32		SY:right parent		line: 256		column:25
token: {		symID: 35		SY:left brace		line: 256		column:26
token: do		symID: 5		SY:do		line: 257		column:9
token: {		symID: 35		SY:left brace		line: 257		column:12
token: printf		symID: 11		SY:printf		line: 258		column:13
token: (		symID: 31		SY:left parent		line: 258		column:19
token: Input error, try Again: 		symID: 30		SY:string		line: 258		column:20
token: )		symID: 32		SY:right parent		line: 258		column:46
token: ;		symID: 24		SY:semi		line: 258		column:47
token: scanf		symID: 10		SY:scanf		line: 259		column:13
token: (		symID: 31		SY:left parent		line: 259		column:18
token: n		symID: 37		SY:identifier		line: 259		column:19
token: ,		symID: 23		SY:comma		line: 259		column:20
token: m		symID: 37		SY:identifier		line: 259		column:22
token: )		symID: 32		SY:right parent		line: 259		column:23
token: ;		symID: 24		SY:semi		line: 259		column:24
token: }		symID: 36		SY:right brace		line: 260		column:9
token: while		symID: 6		SY:while		line: 260		column:11
token: (		symID: 31		SY:left parent		line: 260		column:17
token: iswronggcd		symID: 37		SY:identifier		line: 260		column:18
token: (		symID: 31		SY:left parent		line: 260		column:28
token: n		symID: 37		SY:identifier		line: 260		column:29
token: ,		symID: 23		SY:comma		line: 260		column:30
token: m		symID: 37		SY:identifier		line: 260		column:32
token: )		symID: 32		SY:right parent		line: 260		column:33
token: )		symID: 32		SY:right parent		line: 260		column:34
token: ;		symID: 24		SY:semi		line: 260		column:35
token: }		symID: 36		SY:right brace		line: 261		column:5
token: printf		symID: 11		SY:printf		line: 262		column:5
token: (		symID: 31		SY:left parent		line: 262		column:11
token: The gcd's answer is 		symID: 30		SY:string		line: 262		column:12
token: ,		symID: 23		SY:comma		line: 262		column:34
token: gcd		symID: 37		SY:identifier		line: 262		column:36
token: (		symID: 31		SY:left parent		line: 262		column:39
token: n		symID: 37		SY:identifier		line: 262		column:40
token: ,		symID: 23		SY:comma		line: 262		column:41
token: m		symID: 37		SY:identifier		line: 262		column:43
token: )		symID: 32		SY:right parent		line: 262		column:44
token: )		symID: 32		SY:right parent		line: 262		column:45
token: ;		symID: 24		SY:semi		line: 262		column:46
token: }		symID: 36		SY:right brace		line: 263		column:1
token: int		symID: 1		SY:int		line: 265		column:1
token: is_prime		symID: 37		SY:identifier		line: 265		column:5
token: (		symID: 31		SY:left parent		line: 265		column:13
token: int		symID: 1		SY:int		line: 265		column:14
token: x		symID: 37		SY:identifier		line: 265		column:18
token: )		symID: 32		SY:right parent		line: 265		column:19
token: {		symID: 35		SY:left brace		line: 265		column:20
token: int		symID: 1		SY:int		line: 266		column:5
token: i		symID: 37		SY:identifier		line: 266		column:9
token: ;		symID: 24		SY:semi		line: 266		column:10
token: i		symID: 37		SY:identifier		line: 267		column:5
token: =		symID: 25		SY:assign		line: 267		column:7
token: 2		symID: 29		SY:number		line: 267		column:9
token: ;		symID: 24		SY:semi		line: 267		column:10
token: if		symID: 9		SY:if		line: 268		column:5
token: (		symID: 31		SY:left parent		line: 268		column:8
token: x		symID: 37		SY:identifier		line: 268		column:9
token: ==		symID: 21		SY:equal		line: 268		column:11
token: 2		symID: 29		SY:number		line: 268		column:14
token: )		symID: 32		SY:right parent		line: 268		column:15
token: return		symID: 12		SY:return		line: 269		column:9
token: (		symID: 31		SY:left parent		line: 269		column:16
token: 1		symID: 29		SY:number		line: 269		column:17
token: )		symID: 32		SY:right parent		line: 269		column:18
token: ;		symID: 24		SY:semi		line: 269		column:19
token: do		symID: 5		SY:do		line: 270		column:5
token: {		symID: 35		SY:left brace		line: 270		column:8
token: if		symID: 9		SY:if		line: 271		column:9
token: (		symID: 31		SY:left parent		line: 271		column:12
token: mod		symID: 37		SY:identifier		line: 271		column:13
token: (		symID: 31		SY:left parent		line: 271		column:16
token: x		symID: 37		SY:identifier		line: 271		column:17
token: ,		symID: 23		SY:comma		line: 271		column:18
token: i		symID: 37		SY:identifier		line: 271		column:20
token: )		symID: 32		SY:right parent		line: 271		column:21
token: ==		symID: 21		SY:equal		line: 271		column:23
token: 0		symID: 29		SY:number		line: 271		column:26
token: )		symID: 32		SY:right parent		line: 271		column:27
token: return		symID: 12		SY:return		line: 272		column:13
token: (		symID: 31		SY:left parent		line: 272		column:20
token: 0		symID: 29		SY:number		line: 272		column:21
token: )		symID: 32		SY:right parent		line: 272		column:22
token: ;		symID: 24		SY:semi		line: 272		column:23
token: i		symID: 37		SY:identifier		line: 273		column:9
token: =		symID: 25		SY:assign		line: 273		column:11
token: i		symID: 37		SY:identifier		line: 273		column:13
token: +		symID: 13		SY:plus		line: 273		column:15
token: 1		symID: 29		SY:number		line: 273		column:17
token: ;		symID: 24		SY:semi		line: 273		column:18
token: }		symID: 36		SY:right brace		line: 274		column:5
token: while		symID: 6		SY:while		line: 274		column:6
token: (		symID: 31		SY:left parent		line: 274		column:12
token: i		symID: 37		SY:identifier		line: 274		column:13
token: *		symID: 15		SY:mult		line: 274		column:15
token: i		symID: 37		SY:identifier		line: 274		column:17
token: <		symID: 18		SY:less		line: 274		column:19
token: x		symID: 37		SY:identifier		line: 274		column:21
token: )		symID: 32		SY:right parent		line: 274		column:22
token: ;		symID: 24		SY:semi		line: 274		column:23
token: return		symID: 12		SY:return		line: 275		column:5
token: (		symID: 31		SY:left parent		line: 275		column:12
token: 1		symID: 29		SY:number		line: 275		column:13
token: )		symID: 32		SY:right parent		line: 275		column:14
token: ;		symID: 24		SY:semi		line: 275		column:15
token: }		symID: 36		SY:right brace		line: 276		column:1
token: void		symID: 3		SY:void		line: 278		column:1
token: prime_factorization		symID: 37		SY:identifier		line: 278		column:6
token: (		symID: 31		SY:left parent		line: 278		column:25
token: int		symID: 1		SY:int		line: 278		column:26
token: n		symID: 37		SY:identifier		line: 278		column:30
token: )		symID: 32		SY:right parent		line: 278		column:31
token: {		symID: 35		SY:left brace		line: 278		column:32
token: int		symID: 1		SY:int		line: 279		column:5
token: i		symID: 37		SY:identifier		line: 279		column:9
token: ,		symID: 23		SY:comma		line: 279		column:10
token: first		symID: 37		SY:identifier		line: 279		column:12
token: ;		symID: 24		SY:semi		line: 279		column:17
token: i		symID: 37		SY:identifier		line: 280		column:5
token: =		symID: 25		SY:assign		line: 280		column:7
token: 2		symID: 29		SY:number		line: 280		column:9
token: ;		symID: 24		SY:semi		line: 280		column:10
token: first		symID: 37		SY:identifier		line: 281		column:5
token: =		symID: 25		SY:assign		line: 281		column:11
token: 0		symID: 29		SY:number		line: 281		column:13
token: ;		symID: 24		SY:semi		line: 281		column:14
token: if		symID: 9		SY:if		line: 282		column:5
token: (		symID: 31		SY:left parent		line: 282		column:8
token: n		symID: 37		SY:identifier		line: 282		column:9
token: ==		symID: 21		SY:equal		line: 282		column:11
token: 1		symID: 29		SY:number		line: 282		column:14
token: )		symID: 32		SY:right parent		line: 282		column:15
token: {		symID: 35		SY:left brace		line: 282		column:16
token: printf		symID: 11		SY:printf		line: 283		column:9
token: (		symID: 31		SY:left parent		line: 283		column:15
token: 1		symID: 30		SY:string		line: 283		column:16
token: )		symID: 32		SY:right parent		line: 283		column:19
token: ;		symID: 24		SY:semi		line: 283		column:20
token: return		symID: 12		SY:return		line: 284		column:9
token: ;		symID: 24		SY:semi		line: 284		column:16
token: }		symID: 36		SY:right brace		line: 285		column:5
token: do		symID: 5		SY:do		line: 286		column:5
token: {		symID: 35		SY:left brace		line: 286		column:8
token: if		symID: 9		SY:if		line: 287		column:9
token: (		symID: 31		SY:left parent		line: 287		column:12
token: is_prime		symID: 37		SY:identifier		line: 287		column:13
token: (		symID: 31		SY:left parent		line: 287		column:21
token: i		symID: 37		SY:identifier		line: 287		column:22
token: )		symID: 32		SY:right parent		line: 287		column:23
token: ==		symID: 21		SY:equal		line: 287		column:25
token: 1		symID: 29		SY:number		line: 287		column:28
token: )		symID: 32		SY:right parent		line: 287		column:29
token: {		symID: 35		SY:left brace		line: 287		column:31
token: if		symID: 9		SY:if		line: 288		column:13
token: (		symID: 31		SY:left parent		line: 288		column:16
token: mod		symID: 37		SY:identifier		line: 288		column:17
token: (		symID: 31		SY:left parent		line: 288		column:20
token: n		symID: 37		SY:identifier		line: 288		column:21
token: ,		symID: 23		SY:comma		line: 288		column:22
token: i		symID: 37		SY:identifier		line: 288		column:24
token: )		symID: 32		SY:right parent		line: 288		column:25
token: ==		symID: 21		SY:equal		line: 288		column:27
token: 0		symID: 29		SY:number		line: 288		column:30
token: )		symID: 32		SY:right parent		line: 288		column:31
token: {		symID: 35		SY:left brace		line: 288		column:32
token: do		symID: 5		SY:do		line: 289		column:17
token: {		symID: 35		SY:left brace		line: 289		column:20
token: n		symID: 37		SY:identifier		line: 290		column:21
token: =		symID: 25		SY:assign		line: 290		column:23
token: n		symID: 37		SY:identifier		line: 290		column:25
token: /		symID: 16		SY:div		line: 290		column:27
token: i		symID: 37		SY:identifier		line: 290		column:29
token: ;		symID: 24		SY:semi		line: 290		column:30
token: if		symID: 9		SY:if		line: 291		column:21
token: (		symID: 31		SY:left parent		line: 291		column:24
token: first		symID: 37		SY:identifier		line: 291		column:25
token: ==		symID: 21		SY:equal		line: 291		column:31
token: 1		symID: 29		SY:number		line: 291		column:34
token: )		symID: 32		SY:right parent		line: 291		column:35
token: printf		symID: 11		SY:printf		line: 292		column:25
token: (		symID: 31		SY:left parent		line: 292		column:31
token: *		symID: 30		SY:string		line: 292		column:32
token: )		symID: 32		SY:right parent		line: 292		column:35
token: ;		symID: 24		SY:semi		line: 292		column:36
token: first		symID: 37		SY:identifier		line: 293		column:21
token: =		symID: 25		SY:assign		line: 293		column:27
token: 1		symID: 29		SY:number		line: 293		column:29
token: ;		symID: 24		SY:semi		line: 293		column:30
token: printf		symID: 11		SY:printf		line: 294		column:21
token: (		symID: 31		SY:left parent		line: 294		column:27
token: i		symID: 37		SY:identifier		line: 294		column:28
token: )		symID: 32		SY:right parent		line: 294		column:29
token: ;		symID: 24		SY:semi		line: 294		column:30
token: }		symID: 36		SY:right brace		line: 295		column:17
token: while		symID: 6		SY:while		line: 295		column:19
token: (		symID: 31		SY:left parent		line: 295		column:25
token: mod		symID: 37		SY:identifier		line: 295		column:26
token: (		symID: 31		SY:left parent		line: 295		column:29
token: n		symID: 37		SY:identifier		line: 295		column:30
token: ,		symID: 23		SY:comma		line: 295		column:31
token: i		symID: 37		SY:identifier		line: 295		column:33
token: )		symID: 32		SY:right parent		line: 295		column:34
token: ==		symID: 21		SY:equal		line: 295		column:36
token: 0		symID: 29		SY:number		line: 295		column:39
token: )		symID: 32		SY:right parent		line: 295		column:40
token: ;		symID: 24		SY:semi		line: 295		column:41
token: }		symID: 36		SY:right brace		line: 296		column:13
token: }		symID: 36		SY:right brace		line: 297		column:9
token: i		symID: 37		SY:identifier		line: 298		column:9
token: =		symID: 25		SY:assign		line: 298		column:11
token: i		symID: 37		SY:identifier		line: 298		column:13
token: +		symID: 13		SY:plus		line: 298		column:15
token: 1		symID: 29		SY:number		line: 298		column:17
token: ;		symID: 24		SY:semi		line: 298		column:18
token: }		symID: 36		SY:right brace		line: 299		column:5
token: while		symID: 6		SY:while		line: 299		column:7
token: (		symID: 31		SY:left parent		line: 299		column:12
token: i		symID: 37		SY:identifier		line: 299		column:13
token: *		symID: 15		SY:mult		line: 299		column:15
token: i		symID: 37		SY:identifier		line: 299		column:17
token: <		symID: 18		SY:less		line: 299		column:19
token: n		symID: 37		SY:identifier		line: 299		column:21
token: )		symID: 32		SY:right parent		line: 299		column:22
token: if		symID: 9		SY:if		line: 301		column:5
token: (		symID: 31		SY:left parent		line: 301		column:8
token: n		symID: 37		SY:identifier		line: 301		column:9
token: !=		symID: 22		SY:not equal		line: 301		column:11
token: 1		symID: 29		SY:number		line: 301		column:14
token: )		symID: 32		SY:right parent		line: 301		column:15
token: {		symID: 35		SY:left brace		line: 301		column:16
token: if		symID: 9		SY:if		line: 302		column:9
token: (		symID: 31		SY:left parent		line: 302		column:12
token: first		symID: 37		SY:identifier		line: 302		column:13
token: ==		symID: 21		SY:equal		line: 302		column:19
token: 1		symID: 29		SY:number		line: 302		column:22
token: )		symID: 32		SY:right parent		line: 302		column:23
token: printf		symID: 11		SY:printf		line: 303		column:13
token: (		symID: 31		SY:left parent		line: 303		column:19
token: *		symID: 30		SY:string		line: 303		column:20
token: )		symID: 32		SY:right parent		line: 303		column:23
token: ;		symID: 24		SY:semi		line: 303		column:24
token: printf		symID: 11		SY:printf		line: 304		column:9
token: (		symID: 31		SY:left parent		line: 304		column:15
token: n		symID: 37		SY:identifier		line: 304		column:16
token: )		symID: 32		SY:right parent		line: 304		column:17
token: ;		symID: 24		SY:semi		line: 304		column:18
token: }		symID: 36		SY:right brace		line: 305		column:5
token: }		symID: 36		SY:right brace		line: 306		column:1
token: void		symID: 3		SY:void		line: 308		column:1
token: prime_factorization_test		symID: 37		SY:identifier		line: 308		column:6
token: (		symID: 31		SY:left parent		line: 308		column:30
token: )		symID: 32		SY:right parent		line: 308		column:31
token: {		symID: 35		SY:left brace		line: 308		column:32
token: int		symID: 1		SY:int		line: 309		column:5
token: n		symID: 37		SY:identifier		line: 309		column:9
token: ;		symID: 24		SY:semi		line: 309		column:10
token: printf		symID: 11		SY:printf		line: 310		column:5
token: (		symID: 31		SY:left parent		line: 310		column:11
token: prime_factorization: Please input a unsigned positive integer(<2^31-1) ?		symID: 30		SY:string		line: 310		column:12
token: )		symID: 32		SY:right parent		line: 310		column:86
token: ;		symID: 24		SY:semi		line: 310		column:87
token: scanf		symID: 10		SY:scanf		line: 311		column:5
token: (		symID: 31		SY:left parent		line: 311		column:10
token: n		symID: 37		SY:identifier		line: 311		column:11
token: )		symID: 32		SY:right parent		line: 311		column:12
token: ;		symID: 24		SY:semi		line: 311		column:13
token: do		symID: 5		SY:do		line: 312		column:5
token: {		symID: 35		SY:left brace		line: 312		column:8
token: if		symID: 9		SY:if		line: 313		column:9
token: (		symID: 31		SY:left parent		line: 313		column:12
token: n		symID: 37		SY:identifier		line: 313		column:13
token: <		symID: 18		SY:less		line: 313		column:15
token: 0		symID: 29		SY:number		line: 313		column:17
token: )		symID: 32		SY:right parent		line: 313		column:18
token: {		symID: 35		SY:left brace		line: 313		column:19
token: printf		symID: 11		SY:printf		line: 314		column:13
token: (		symID: 31		SY:left parent		line: 314		column:19
token: Input error, try again:		symID: 30		SY:string		line: 314		column:20
token: )		symID: 32		SY:right parent		line: 314		column:45
token: ;		symID: 24		SY:semi		line: 314		column:46
token: scanf		symID: 10		SY:scanf		line: 315		column:13
token: (		symID: 31		SY:left parent		line: 315		column:18
token: n		symID: 37		SY:identifier		line: 315		column:19
token: )		symID: 32		SY:right parent		line: 315		column:20
token: ;		symID: 24		SY:semi		line: 315		column:21
token: }		symID: 36		SY:right brace		line: 316		column:9
token: }		symID: 36		SY:right brace		line: 317		column:5
token: while		symID: 6		SY:while		line: 317		column:6
token: (		symID: 31		SY:left parent		line: 317		column:12
token: n		symID: 37		SY:identifier		line: 317		column:13
token: <		symID: 18		SY:less		line: 317		column:15
token: 0		symID: 29		SY:number		line: 317		column:17
token: )		symID: 32		SY:right parent		line: 317		column:18
token: printf		symID: 11		SY:printf		line: 318		column:5
token: (		symID: 31		SY:left parent		line: 318		column:11
token: The factor of n is 		symID: 30		SY:string		line: 318		column:12
token: )		symID: 32		SY:right parent		line: 318		column:33
token: ;		symID: 24		SY:semi		line: 318		column:34
token: prime_factorization		symID: 37		SY:identifier		line: 319		column:5
token: (		symID: 31		SY:left parent		line: 319		column:24
token: n		symID: 37		SY:identifier		line: 319		column:25
token: )		symID: 32		SY:right parent		line: 319		column:26
token: ;		symID: 24		SY:semi		line: 319		column:27
token: }		symID: 36		SY:right brace		line: 320		column:1
token: int		symID: 1		SY:int		line: 321		column:1
token: iswrong		symID: 37		SY:identifier		line: 321		column:5
token: (		symID: 31		SY:left parent		line: 321		column:12
token: char		symID: 2		SY:char		line: 321		column:13
token: a		symID: 37		SY:identifier		line: 321		column:18
token: )		symID: 32		SY:right parent		line: 321		column:19
token: {		symID: 35		SY:left brace		line: 321		column:20
token: if		symID: 9		SY:if		line: 322		column:5
token: (		symID: 31		SY:left parent		line: 322		column:8
token: E		symID: 26		SY:single quota		line: 322		column:9
token: ==		symID: 21		SY:equal		line: 322		column:13
token: a		symID: 37		SY:identifier		line: 322		column:16
token: )		symID: 32		SY:right parent		line: 322		column:17
token: return		symID: 12		SY:return		line: 323		column:9
token: (		symID: 31		SY:left parent		line: 323		column:16
token: 0		symID: 29		SY:number		line: 323		column:17
token: )		symID: 32		SY:right parent		line: 323		column:18
token: ;		symID: 24		SY:semi		line: 323		column:19
token: if		symID: 9		SY:if		line: 324		column:5
token: (		symID: 31		SY:left parent		line: 324		column:8
token: M		symID: 26		SY:single quota		line: 324		column:9
token: ==		symID: 21		SY:equal		line: 324		column:13
token: a		symID: 37		SY:identifier		line: 324		column:16
token: )		symID: 32		SY:right parent		line: 324		column:17
token: return		symID: 12		SY:return		line: 325		column:9
token: (		symID: 31		SY:left parent		line: 325		column:16
token: 0		symID: 29		SY:number		line: 325		column:17
token: )		symID: 32		SY:right parent		line: 325		column:18
token: ;		symID: 24		SY:semi		line: 325		column:19
token: if		symID: 9		SY:if		line: 326		column:5
token: (		symID: 31		SY:left parent		line: 326		column:8
token: H		symID: 26		SY:single quota		line: 326		column:9
token: ==		symID: 21		SY:equal		line: 326		column:13
token: a		symID: 37		SY:identifier		line: 326		column:16
token: )		symID: 32		SY:right parent		line: 326		column:17
token: return		symID: 12		SY:return		line: 327		column:9
token: (		symID: 31		SY:left parent		line: 327		column:16
token: 0		symID: 29		SY:number		line: 327		column:17
token: )		symID: 32		SY:right parent		line: 327		column:18
token: ;		symID: 24		SY:semi		line: 327		column:19
token: printf		symID: 11		SY:printf		line: 328		column:5
token: (		symID: 31		SY:left parent		line: 328		column:11
token: !!!		symID: 30		SY:string		line: 328		column:12
token: )		symID: 32		SY:right parent		line: 328		column:17
token: ;		symID: 24		SY:semi		line: 328		column:18
token: return		symID: 12		SY:return		line: 329		column:5
token: (		symID: 31		SY:left parent		line: 329		column:12
token: 1		symID: 29		SY:number		line: 329		column:13
token: )		symID: 32		SY:right parent		line: 329		column:14
token: ;		symID: 24		SY:semi		line: 329		column:15
token: }		symID: 36		SY:right brace		line: 330		column:1
token: void		symID: 3		SY:void		line: 332		column:1
token: main		symID: 4		SY:main		line: 332		column:6
token: (		symID: 31		SY:left parent		line: 332		column:10
token: )		symID: 32		SY:right parent		line: 332		column:11
token: {		symID: 35		SY:left brace		line: 332		column:12
token: char		symID: 2		SY:char		line: 333		column:5
token: kind		symID: 37		SY:identifier		line: 333		column:10
token: ;		symID: 24		SY:semi		line: 333		column:14
token: printf		symID: 11		SY:printf		line: 334		column:5
token: (		symID: 31		SY:left parent		line: 334		column:11
token: Please input Test Type:E(Easy), (M)Middle, H(Hard): 		symID: 30		SY:string		line: 334		column:12
token: )		symID: 32		SY:right parent		line: 334		column:66
token: ;		symID: 24		SY:semi		line: 334		column:67
token: scanf		symID: 10		SY:scanf		line: 335		column:5
token: (		symID: 31		SY:left parent		line: 335		column:10
token: kind		symID: 37		SY:identifier		line: 335		column:11
token: )		symID: 32		SY:right parent		line: 335		column:15
token: ;		symID: 24		SY:semi		line: 335		column:16
token: if		symID: 9		SY:if		line: 336		column:5
token: (		symID: 31		SY:left parent		line: 336		column:8
token: iswrong		symID: 37		SY:identifier		line: 336		column:9
token: (		symID: 31		SY:left parent		line: 336		column:16
token: kind		symID: 37		SY:identifier		line: 336		column:17
token: )		symID: 32		SY:right parent		line: 336		column:21
token: )		symID: 32		SY:right parent		line: 336		column:22
token: {		symID: 35		SY:left brace		line: 336		column:23
token: do		symID: 5		SY:do		line: 337		column:9
token: {		symID: 35		SY:left brace		line: 337		column:11
token: printf		symID: 11		SY:printf		line: 338		column:13
token: (		symID: 31		SY:left parent		line: 338		column:19
token: Try Again: 		symID: 30		SY:string		line: 338		column:20
token: )		symID: 32		SY:right parent		line: 338		column:33
token: ;		symID: 24		SY:semi		line: 338		column:34
token: scanf		symID: 10		SY:scanf		line: 339		column:13
token: (		symID: 31		SY:left parent		line: 339		column:18
token: kind		symID: 37		SY:identifier		line: 339		column:19
token: )		symID: 32		SY:right parent		line: 339		column:23
token: ;		symID: 24		SY:semi		line: 339		column:24
token: }		symID: 36		SY:right brace		line: 340		column:9
token: while		symID: 6		SY:while		line: 340		column:10
token: (		symID: 31		SY:left parent		line: 340		column:16
token: iswrong		symID: 37		SY:identifier		line: 340		column:17
token: (		symID: 31		SY:left parent		line: 340		column:24
token: kind		symID: 37		SY:identifier		line: 340		column:25
token: )		symID: 32		SY:right parent		line: 340		column:29
token: )		symID: 32		SY:right parent		line: 340		column:30
token: }		symID: 36		SY:right brace		line: 341		column:5
token: printf		symID: 11		SY:printf		line: 342		column:5
token: (		symID: 31		SY:left parent		line: 342		column:11
token:   11111111   		symID: 30		SY:string		line: 342		column:12
token: )		symID: 32		SY:right parent		line: 342		column:27
token: ;		symID: 24		SY:semi		line: 342		column:28
token: switch		symID: 7		SY:switch		line: 343		column:5
token: (		symID: 31		SY:left parent		line: 343		column:11
token: kind		symID: 37		SY:identifier		line: 343		column:12
token: )		symID: 32		SY:right parent		line: 343		column:16
token: {		symID: 35		SY:left brace		line: 343		column:17
token: case		symID: 8		SY:case		line: 344		column:5
token: E		symID: 26		SY:single quota		line: 344		column:10
token: :		symID: 28		SY:colon		line: 344		column:13
token: {		symID: 35		SY:left brace		line: 344		column:15
token: printf		symID: 11		SY:printf		line: 345		column:17
token: (		symID: 31		SY:left parent		line: 345		column:23
token:  in  E! 		symID: 30		SY:string		line: 345		column:24
token: )		symID: 32		SY:right parent		line: 345		column:34
token: ;		symID: 24		SY:semi		line: 345		column:35
token: define_test		symID: 37		SY:identifier		line: 346		column:17
token: (		symID: 31		SY:left parent		line: 346		column:28
token: )		symID: 32		SY:right parent		line: 346		column:29
token: ;		symID: 24		SY:semi		line: 346		column:30
token: printf		symID: 11		SY:printf		line: 347		column:17
token: (		symID: 31		SY:left parent		line: 347		column:23
token:  after d_t 		symID: 30		SY:string		line: 347		column:24
token: )		symID: 32		SY:right parent		line: 347		column:37
token: ;		symID: 24		SY:semi		line: 347		column:38
token: operator_test		symID: 37		SY:identifier		line: 348		column:17
token: (		symID: 31		SY:left parent		line: 348		column:30
token: )		symID: 32		SY:right parent		line: 348		column:31
token: ;		symID: 24		SY:semi		line: 348		column:32
token: printf		symID: 11		SY:printf		line: 349		column:17
token: (		symID: 31		SY:left parent		line: 349		column:23
token:  after f_t 		symID: 30		SY:string		line: 349		column:24
token: )		symID: 32		SY:right parent		line: 349		column:37
token: ;		symID: 24		SY:semi		line: 349		column:38
token: fibonaci_test		symID: 37		SY:identifier		line: 350		column:17
token: (		symID: 31		SY:left parent		line: 350		column:30
token: )		symID: 32		SY:right parent		line: 350		column:31
token: ;		symID: 24		SY:semi		line: 350		column:32
token: printf		symID: 11		SY:printf		line: 351		column:17
token: (		symID: 31		SY:left parent		line: 351		column:23
token:  after fib_t 		symID: 30		SY:string		line: 351		column:24
token: )		symID: 32		SY:right parent		line: 351		column:39
token: ;		symID: 24		SY:semi		line: 351		column:40
token: }		symID: 36		SY:right brace		line: 352		column:13
token: case		symID: 8		SY:case		line: 353		column:5
token: M		symID: 26		SY:single quota		line: 353		column:10
token: :		symID: 28		SY:colon		line: 353		column:13
token: {		symID: 35		SY:left brace		line: 353		column:15
token: dowhile_test		symID: 37		SY:identifier		line: 354		column:17
token: (		symID: 31		SY:left parent		line: 354		column:29
token: )		symID: 32		SY:right parent		line: 354		column:30
token: ;		symID: 24		SY:semi		line: 354		column:31
token: condition_test		symID: 37		SY:identifier		line: 355		column:17
token: (		symID: 31		SY:left parent		line: 355		column:31
token: )		symID: 32		SY:right parent		line: 355		column:32
token: ;		symID: 24		SY:semi		line: 355		column:33
token: string_test		symID: 37		SY:identifier		line: 356		column:17
token: (		symID: 31		SY:left parent		line: 356		column:28
token: )		symID: 32		SY:right parent		line: 356		column:29
token: ;		symID: 24		SY:semi		line: 356		column:30
token: gcd_test		symID: 37		SY:identifier		line: 357		column:17
token: (		symID: 31		SY:left parent		line: 357		column:25
token: )		symID: 32		SY:right parent		line: 357		column:26
token: ;		symID: 24		SY:semi		line: 357		column:27
token: }		symID: 36		SY:right brace		line: 358		column:13
token: case		symID: 8		SY:case		line: 359		column:5
token: H		symID: 26		SY:single quota		line: 359		column:10
token: :		symID: 28		SY:colon		line: 359		column:13
token: {		symID: 35		SY:left brace		line: 359		column:15
token: define_test		symID: 37		SY:identifier		line: 360		column:13
token: (		symID: 31		SY:left parent		line: 360		column:24
token: )		symID: 32		SY:right parent		line: 360		column:25
token: ;		symID: 24		SY:semi		line: 360		column:26
token: operator_test		symID: 37		SY:identifier		line: 361		column:13
token: (		symID: 31		SY:left parent		line: 361		column:26
token: )		symID: 32		SY:right parent		line: 361		column:27
token: ;		symID: 24		SY:semi		line: 361		column:28
token: dowhile_test		symID: 37		SY:identifier		line: 362		column:13
token: (		symID: 31		SY:left parent		line: 362		column:25
token: )		symID: 32		SY:right parent		line: 362		column:26
token: ;		symID: 24		SY:semi		line: 362		column:27
token: condition_test		symID: 37		SY:identifier		line: 363		column:13
token: (		symID: 31		SY:left parent		line: 363		column:27
token: )		symID: 32		SY:right parent		line: 363		column:28
token: ;		symID: 24		SY:semi		line: 363		column:29
token: string_test		symID: 37		SY:identifier		line: 364		column:13
token: (		symID: 31		SY:left parent		line: 364		column:24
token: )		symID: 32		SY:right parent		line: 364		column:25
token: ;		symID: 24		SY:semi		line: 364		column:26
token: miscellaneous_test		symID: 37		SY:identifier		line: 365		column:13
token: (		symID: 31		SY:left parent		line: 365		column:31
token: )		symID: 32		SY:right parent		line: 365		column:32
token: ;		symID: 24		SY:semi		line: 365		column:33
token: prime_factorization_test		symID: 37		SY:identifier		line: 366		column:13
token: (		symID: 31		SY:left parent		line: 366		column:37
token: )		symID: 32		SY:right parent		line: 366		column:38
token: ;		symID: 24		SY:semi		line: 366		column:39
token: }		symID: 36		SY:right brace		line: 367		column:9
token: }		symID: 36		SY:right brace		line: 368		column:5
token: return		symID: 12		SY:return		line: 369		column:5
token: ;		symID: 24		SY:semi		line: 369		column:12
token: }		symID: 36		SY:right brace		line: 370		column:1
